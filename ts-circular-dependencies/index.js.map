{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {existsSync, readFileSync, writeFileSync} from 'fs';\nimport {isAbsolute, relative, resolve} from 'path';\nimport {Argv} from 'yargs';\n\nimport glob from 'fast-glob';\nimport ts from 'typescript';\n\nimport {green, Log, yellow} from '../utils/logging.js';\n\nimport {Analyzer, ReferenceChain} from './analyzer.js';\nimport {CircularDependenciesTestConfig, loadTestConfig} from './config.js';\nimport {convertPathToForwardSlash} from './file_system.js';\nimport {compareGoldens, convertReferenceChainToGolden, Golden} from './golden.js';\n\nexport function tsCircularDependenciesBuilder(localYargs: Argv) {\n  return localYargs\n    .help()\n    .strict()\n    .demandCommand()\n    .option('config', {\n      type: 'string',\n      demandOption: true,\n      description: 'Path to the configuration file.',\n    })\n    .option('warnings', {type: 'boolean', description: 'Prints all warnings.'})\n    .command(\n      'check',\n      'Checks if the circular dependencies have changed.',\n      (args) => args,\n      async (argv) => {\n        const {config: configArg, warnings} = argv;\n        const configPath = isAbsolute(configArg) ? configArg : resolve(configArg);\n        const config = await loadTestConfig(configPath);\n        process.exit(main(false, config, !!warnings));\n      },\n    )\n    .command(\n      'approve',\n      'Approves the current circular dependencies.',\n      (args) => args,\n      async (argv) => {\n        const {config: configArg, warnings} = argv;\n        const configPath = isAbsolute(configArg) ? configArg : resolve(configArg);\n        const config = await loadTestConfig(configPath);\n        process.exit(main(true, config, !!warnings));\n      },\n    );\n}\n\n/**\n * Runs the ts-circular-dependencies tool.\n * @param approve Whether the detected circular dependencies should be approved.\n * @param config Configuration for the current circular dependencies test.\n * @param printWarnings Whether warnings should be printed out.\n * @returns Status code.\n */\nexport function main(\n  approve: boolean,\n  config: CircularDependenciesTestConfig,\n  printWarnings: boolean,\n): number {\n  const {\n    baseDir,\n    goldenFile,\n    glob: globPattern,\n    resolveModule,\n    approveCommand,\n    ignoreTypeOnlyChecks,\n  } = config;\n  const analyzer = new Analyzer(resolveModule, ignoreTypeOnlyChecks);\n  const cycles: ReferenceChain[] = [];\n  const checkedNodes = new WeakSet<ts.SourceFile>();\n\n  glob\n    .globSync(globPattern, {absolute: true, ignore: ['**/node_modules/**']})\n    .forEach((filePath) => {\n      const sourceFile = analyzer.getSourceFile(filePath);\n      cycles.push(...analyzer.findCycles(sourceFile, checkedNodes));\n    });\n\n  const actual = convertReferenceChainToGolden(cycles, baseDir);\n\n  Log.info(green(`   Current number of cycles: ${yellow(cycles.length.toString())}`));\n\n  const warningsCount = analyzer.unresolvedFiles.size + analyzer.unresolvedModules.size;\n\n  // By default, warnings for unresolved files or modules are not printed. This is because\n  // it's common that third-party modules are not resolved/visited. Also generated files\n  // from the View Engine compiler (i.e. factories, summaries) cannot be resolved.\n  if (printWarnings && warningsCount !== 0) {\n    Log.info(yellow('⚠  The following imports could not be resolved:'));\n    Array.from(analyzer.unresolvedModules)\n      .sort()\n      .forEach((specifier) => Log.info(`  • ${specifier}`));\n    analyzer.unresolvedFiles.forEach((value, key) => {\n      Log.info(`  • ${getRelativePath(baseDir, key)}`);\n      value.sort().forEach((specifier) => Log.info(`      ${specifier}`));\n    });\n  } else {\n    Log.warn(`⚠  ${warningsCount} imports could not be resolved.`);\n    Log.warn(`   Please rerun with \"--warnings\" to inspect unresolved imports.`);\n  }\n\n  if (goldenFile === undefined) {\n    if (approve) {\n      Log.error(\n        `x  Cannot approve circular depdencies within this repository as no golden file exists.`,\n      );\n      return 1;\n    }\n    if (cycles.length > 0) {\n      Log.error(\n        `x  No circular dependencies are allow within this repository, but circular dependencies were found:`,\n      );\n      actual.forEach((c) => Log.error(`     • ${convertReferenceChainToString(c)}`));\n      return 1;\n    }\n\n    Log.info(green('✔  No circular dependencies found in this repository.'));\n    return 0;\n  }\n\n  if (approve) {\n    writeFileSync(goldenFile, JSON.stringify(actual, null, 2));\n    Log.info(green('✔  Updated golden file.'));\n    return 0;\n  }\n\n  if (!existsSync(goldenFile)) {\n    Log.error(`x  Could not find golden file: ${goldenFile}`);\n    return 1;\n  }\n\n  const expected = goldenFile ? (JSON.parse(readFileSync(goldenFile, 'utf8')) as Golden) : [];\n  const {fixedCircularDeps, newCircularDeps} = compareGoldens(actual, expected);\n  const isMatching = fixedCircularDeps.length === 0 && newCircularDeps.length === 0;\n\n  if (isMatching) {\n    Log.info(green('✔  Golden matches current circular dependencies.'));\n    return 0;\n  }\n\n  Log.error('✘  Golden does not match current circular dependencies.');\n  if (newCircularDeps.length !== 0) {\n    Log.error(`   New circular dependencies which are not allowed:`);\n    newCircularDeps.forEach((c) => Log.error(`     • ${convertReferenceChainToString(c)}`));\n    Log.error();\n  }\n  if (fixedCircularDeps.length !== 0) {\n    Log.error(`   Fixed circular dependencies that need to be removed from the golden:`);\n    fixedCircularDeps.forEach((c) => Log.error(`     • ${convertReferenceChainToString(c)}`));\n    Log.info(\n      yellow(\n        `\\n   Total: ${newCircularDeps.length} new cycle(s), ${fixedCircularDeps.length} fixed cycle(s). \\n`,\n      ),\n    );\n  }\n\n  if (approveCommand) {\n    Log.info(yellow(`   Please approve the new golden with: ${approveCommand}`));\n  } else if (goldenFile) {\n    Log.info(\n      yellow(\n        `   Please update the golden. The following command can be ` +\n          `run: yarn ng-dev ts-circular-deps approve ${getRelativePath(process.cwd(), goldenFile)}.`,\n      ),\n    );\n  }\n\n  return 1;\n}\n\n/** Gets the specified path relative to the base directory. */\nfunction getRelativePath(baseDir: string, path: string) {\n  return convertPathToForwardSlash(relative(baseDir, path));\n}\n\n/** Converts the given reference chain to its string representation. */\nfunction convertReferenceChainToString(chain: ReferenceChain<string>) {\n  return chain.join(' → ');\n}\n"]}