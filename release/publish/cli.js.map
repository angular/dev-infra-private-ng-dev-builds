{"version":3,"file":"cli.js","sourceRoot":"","sources":["cli.ts"],"names":[],"mappings":"AAUA,OAAO,EAAC,uBAAuB,EAAE,SAAS,EAAC,MAAM,uBAAuB,CAAC;AACzE,OAAO,EAAC,oBAAoB,EAAC,MAAM,iCAAiC,CAAC;AACrE,OAAO,EAAC,wBAAwB,EAAC,MAAM,oBAAoB,CAAC;AAE5D,OAAO,EAAC,eAAe,EAAE,WAAW,EAAC,MAAM,YAAY,CAAC;AACxD,OAAO,EAAC,sBAAsB,EAAC,MAAM,6CAA6C,CAAC;AACnF,OAAO,EAAC,KAAK,EAAE,GAAG,EAAE,MAAM,EAAC,MAAM,wBAAwB,CAAC;AAM1D,SAAS,OAAO,CAAC,IAAU;IACzB,OAAO,oBAAoB,CAAC,IAAI,CAAC,CAAC;AACpC,CAAC;AAGD,KAAK,UAAU,OAAO;IACpB,MAAM,GAAG,GAAG,MAAM,sBAAsB,CAAC,GAAG,EAAE,CAAC;IAC/C,MAAM,MAAM,GAAG,MAAM,SAAS,EAAE,CAAC;IACjC,wBAAwB,CAAC,MAAM,CAAC,CAAC;IACjC,uBAAuB,CAAC,MAAM,CAAC,CAAC;IAEhC,MAAM,IAAI,GAAG,IAAI,WAAW,CAAC,GAAG,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;IAC9E,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,GAAG,EAAE,CAAC;IAEhC,QAAQ,MAAM,EAAE,CAAC;QACf,KAAK,eAAe,CAAC,WAAW;YAC9B,GAAG,CAAC,KAAK,CAAC,iEAAiE,CAAC,CAAC;YAC7E,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC;YACrB,MAAM;QACR,KAAK,eAAe,CAAC,gBAAgB;YACnC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,2CAA2C,CAAC,CAAC,CAAC;YAC9D,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC;YACrB,MAAM;QACR,KAAK,eAAe,CAAC,OAAO;YAC1B,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,4CAA4C,CAAC,CAAC,CAAC;YAC9D,MAAM;IACV,CAAC;AACH,CAAC;AAGD,MAAM,CAAC,MAAM,2BAA2B,GAA6C;IACnF,OAAO;IACP,OAAO;IACP,OAAO,EAAE,SAAS;IAClB,QAAQ,EAAE,sDAAsD;CACjE,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Argv, Arguments, CommandModule} from 'yargs';\n\nimport {assertValidGithubConfig, getConfig} from '../../utils/config.js';\nimport {addGithubTokenOption} from '../../utils/git/github-yargs.js';\nimport {assertValidReleaseConfig} from '../config/index.js';\n\nimport {CompletionState, ReleaseTool} from './index.js';\nimport {AuthenticatedGitClient} from '../../utils/git/authenticated-git-client.js';\nimport {green, Log, yellow} from '../../utils/logging.js';\n\n/** Command line options for publishing a release. */\nexport interface ReleasePublishOptions {}\n\n/** Yargs command builder for configuring the `ng-dev release publish` command. */\nfunction builder(argv: Argv): Argv<ReleasePublishOptions> {\n  return addGithubTokenOption(argv);\n}\n\n/** Yargs command handler for staging a release. */\nasync function handler() {\n  const git = await AuthenticatedGitClient.get();\n  const config = await getConfig();\n  assertValidReleaseConfig(config);\n  assertValidGithubConfig(config);\n\n  const task = new ReleaseTool(git, config.release, config.github, git.baseDir);\n  const result = await task.run();\n\n  switch (result) {\n    case CompletionState.FATAL_ERROR:\n      Log.error(`Release action has been aborted due to fatal errors. See above.`);\n      process.exitCode = 2;\n      break;\n    case CompletionState.MANUALLY_ABORTED:\n      Log.info(yellow(`Release action has been manually aborted.`));\n      process.exitCode = 1;\n      break;\n    case CompletionState.SUCCESS:\n      Log.info(green(`Release action has completed successfully.`));\n      break;\n  }\n}\n\n/** CLI command module for publishing a release. */\nexport const ReleasePublishCommandModule: CommandModule<{}, ReleasePublishOptions> = {\n  builder,\n  handler,\n  command: 'publish',\n  describe: 'Publish new releases and configure version branches.',\n};\n"]}