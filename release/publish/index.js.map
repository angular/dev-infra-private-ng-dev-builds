{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {GithubConfig} from '../../utils/config.js';\nimport {AuthenticatedGitClient} from '../../utils/git/authenticated-git-client.js';\nimport {ReleaseConfig} from '../config/index.js';\nimport {ActiveReleaseTrains} from '../versioning/active-release-trains.js';\nimport {NpmCommand} from '../versioning/npm-command.js';\nimport {printActiveReleaseTrains} from '../versioning/print-active-trains.js';\nimport {getNextBranchName, ReleaseRepoWithApi} from '../versioning/version-branches.js';\n\nimport {ReleaseAction} from './actions.js';\nimport {FatalReleaseActionError, UserAbortedReleaseActionError} from './actions-error.js';\nimport {actions} from './actions/index.js';\nimport {verifyNgDevToolIsUpToDate} from '../../utils/version-check.js';\nimport {Log, yellow} from '../../utils/logging.js';\nimport {Prompt} from '../../utils/prompt.js';\n\nexport enum CompletionState {\n  SUCCESS,\n  FATAL_ERROR,\n  MANUALLY_ABORTED,\n}\n\nexport class ReleaseTool {\n  /** The previous git commit to return back to after the release tool runs. */\n  private previousGitBranchOrRevision = this._git.getCurrentBranchOrRevision();\n\n  constructor(\n    protected _git: AuthenticatedGitClient,\n    protected _config: ReleaseConfig,\n    protected _github: GithubConfig,\n    protected _projectRoot: string,\n  ) {}\n\n  /** Runs the interactive release tool. */\n  async run(): Promise<CompletionState> {\n    Log.info();\n    Log.info(yellow('--------------------------------------------'));\n    Log.info(yellow('  Angular Dev-Infra release staging script'));\n    Log.info(yellow('--------------------------------------------'));\n    Log.info();\n\n    const {owner, name} = this._github;\n    const nextBranchName = getNextBranchName(this._github);\n\n    if (\n      !(await this._verifyNoUncommittedChanges()) ||\n      !(await this._verifyRunningFromNextBranch(nextBranchName)) ||\n      !(await this._verifyNoShallowRepository()) ||\n      !(await verifyNgDevToolIsUpToDate(this._projectRoot))\n    ) {\n      return CompletionState.FATAL_ERROR;\n    }\n\n    if (!(await this._verifyNpmLoginState())) {\n      return CompletionState.MANUALLY_ABORTED;\n    }\n\n    // Set the environment variable to skip all git commit hooks triggered by husky. We are unable to\n    // rely on `--no-verify` as some hooks still run, notably the `prepare-commit-msg` hook.\n    // Running hooks has the downside of potentially running code (like the `ng-dev` tool) when a version\n    // branch is checked out, but the node modules are not re-installed. The tool switches branches\n    // multiple times per execution, and it is not desirable re-running Yarn all the time.\n    process.env['HUSKY'] = '0';\n\n    const repo: ReleaseRepoWithApi = {owner, name, api: this._git.github, nextBranchName};\n    const releaseTrains = await ActiveReleaseTrains.fetch(repo);\n\n    // Print the active release trains so that the caretaker can access\n    // the current project branching state without switching context.\n    await printActiveReleaseTrains(releaseTrains, this._config);\n\n    const action = await this._promptForReleaseAction(releaseTrains);\n\n    try {\n      await action.perform();\n    } catch (e) {\n      if (e instanceof UserAbortedReleaseActionError) {\n        return CompletionState.MANUALLY_ABORTED;\n      }\n      // Only print the error message and stack if the error is not a known fatal release\n      // action error (for which we print the error gracefully to the console with colors).\n      if (!(e instanceof FatalReleaseActionError) && e instanceof Error) {\n        console.error(e);\n      }\n      return CompletionState.FATAL_ERROR;\n    } finally {\n      await this.cleanup();\n    }\n\n    return CompletionState.SUCCESS;\n  }\n\n  /** Run post release tool cleanups. */\n  private async cleanup(): Promise<void> {\n    // Return back to the git state from before the release tool ran.\n    this._git.checkout(this.previousGitBranchOrRevision, true);\n    // Ensure log out of NPM.\n    await NpmCommand.logout(this._config.publishRegistry);\n  }\n\n  /** Prompts the caretaker for a release action that should be performed. */\n  private async _promptForReleaseAction(activeTrains: ActiveReleaseTrains) {\n    const choices: {name: string; value: ReleaseAction}[] = [];\n\n    // Find and instantiate all release actions which are currently valid.\n    for (let actionType of actions) {\n      if (await actionType.isActive(activeTrains, this._config)) {\n        const action: ReleaseAction = new actionType(\n          activeTrains,\n          this._git,\n          this._config,\n          this._projectRoot,\n        );\n        choices.push({name: await action.getDescription(), value: action});\n      }\n    }\n\n    Log.info('Please select the type of release you want to perform.');\n\n    const releaseAction = await Prompt.select<ReleaseAction>({\n      message: 'Please select an action:',\n      choices,\n    });\n\n    return releaseAction;\n  }\n\n  /**\n   * Verifies that there are no uncommitted changes in the project.\n   * @returns a boolean indicating success or failure.\n   */\n  private async _verifyNoUncommittedChanges(): Promise<boolean> {\n    if (this._git.hasUncommittedChanges()) {\n      Log.error('  ✘   There are changes which are not committed and should be discarded.');\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Verifies that the local repository is not configured as shallow.\n   * @returns a boolean indicating success or failure.\n   */\n  private async _verifyNoShallowRepository(): Promise<boolean> {\n    if (this._git.isShallowRepo()) {\n      Log.error('  ✘   The local repository is configured as shallow.');\n      Log.error(`      Please convert the repository to a complete one by syncing with upstream.`);\n      Log.error(`      https://git-scm.com/docs/git-fetch#Documentation/git-fetch.txt---unshallow`);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Verifies that the next branch from the configured repository is checked out.\n   * @returns a boolean indicating success or failure.\n   */\n  private async _verifyRunningFromNextBranch(nextBranchName: string): Promise<boolean> {\n    const headSha = this._git.run(['rev-parse', 'HEAD']).stdout.trim();\n    const {data} = await this._git.github.repos.getBranch({\n      ...this._git.remoteParams,\n      branch: this._git.mainBranchName,\n    });\n\n    if (headSha !== data.commit.sha) {\n      Log.error('  ✘   Running release tool from an outdated local branch.');\n      Log.error(`      Please make sure you are running from the \"${nextBranchName}\" branch.`);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Verifies that the user is logged into NPM at the correct registry, if defined for the release.\n   * @returns a boolean indicating whether the user is logged into NPM.\n   */\n  private async _verifyNpmLoginState(): Promise<boolean> {\n    const registry = `NPM at the ${this._config.publishRegistry ?? 'default NPM'} registry`;\n    // TODO(josephperrott): remove wombat specific block once wombot allows `npm whoami` check to\n    // check the status of the local token in the .npmrc file.\n    if (this._config.publishRegistry?.includes('wombat-dressing-room.appspot.com')) {\n      Log.info('Unable to determine NPM login state for wombat proxy, requiring login now.');\n      try {\n        await NpmCommand.startInteractiveLogin(this._config.publishRegistry);\n      } catch {\n        return false;\n      }\n      return true;\n    }\n    if (await NpmCommand.checkIsLoggedIn(this._config.publishRegistry)) {\n      Log.debug(`Already logged into ${registry}.`);\n      return true;\n    }\n    Log.warn(`  ✘   Not currently logged into ${registry}.`);\n    const shouldLogin = await Prompt.confirm({message: 'Would you like to log into NPM now?'});\n    if (shouldLogin) {\n      Log.debug('Starting NPM login.');\n      try {\n        await NpmCommand.startInteractiveLogin(this._config.publishRegistry);\n      } catch {\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n}\n"]}