/**
 * @license
 * Copyright Google LLC
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { ConfigureNextAsMajorAction } from './configure-next-as-major.js';
import { CutLongTermSupportPatchAction } from './cut-lts-patch.js';
import { CutNewPatchAction } from './cut-new-patch.js';
import { CutNpmNextPrereleaseAction } from './cut-npm-next-prerelease.js';
import { CutNpmNextReleaseCandidateAction } from './cut-npm-next-release-candidate.js';
import { CutStableAction } from './cut-stable.js';
import { CutExceptionalMinorPrereleaseAction } from './exceptional-minor/cut-exceptional-minor-prerelease.js';
import { CutExceptionalMinorReleaseCandidateAction } from './exceptional-minor/cut-exceptional-minor-release-candidate.js';
import { PrepareExceptionalMinorAction } from './exceptional-minor/prepare-exceptional-minor.js';
import { MoveNextIntoFeatureFreezeAction } from './move-next-into-feature-freeze.js';
import { MoveNextIntoReleaseCandidateAction } from './move-next-into-release-candidate.js';
import { SpecialCutLongTermSupportMinorAction } from './special/cut-lts-minor.js';
import { TagRecentMajorAsLatest } from './tag-recent-major-as-latest.js';
/**
 * List of release actions supported by the release staging tool. These are sorted
 * by priority. Actions which are selectable are sorted based on this declaration order.
 */
export const actions = [
    CutExceptionalMinorReleaseCandidateAction,
    CutExceptionalMinorPrereleaseAction,
    TagRecentMajorAsLatest,
    CutStableAction,
    CutNpmNextReleaseCandidateAction,
    CutNewPatchAction,
    CutNpmNextPrereleaseAction,
    MoveNextIntoFeatureFreezeAction,
    MoveNextIntoReleaseCandidateAction,
    ConfigureNextAsMajorAction,
    PrepareExceptionalMinorAction,
    CutLongTermSupportPatchAction,
    // Special actions. Not displayed by default.
    SpecialCutLongTermSupportMinorAction,
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9uZy1kZXYvcmVsZWFzZS9wdWJsaXNoL2FjdGlvbnMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBR0gsT0FBTyxFQUFDLDBCQUEwQixFQUFDLE1BQU0sOEJBQThCLENBQUM7QUFDeEUsT0FBTyxFQUFDLDZCQUE2QixFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFDakUsT0FBTyxFQUFDLGlCQUFpQixFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFDckQsT0FBTyxFQUFDLDBCQUEwQixFQUFDLE1BQU0sOEJBQThCLENBQUM7QUFDeEUsT0FBTyxFQUFDLGdDQUFnQyxFQUFDLE1BQU0scUNBQXFDLENBQUM7QUFDckYsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQ2hELE9BQU8sRUFBQyxtQ0FBbUMsRUFBQyxNQUFNLHlEQUF5RCxDQUFDO0FBQzVHLE9BQU8sRUFBQyx5Q0FBeUMsRUFBQyxNQUFNLGdFQUFnRSxDQUFDO0FBQ3pILE9BQU8sRUFBQyw2QkFBNkIsRUFBQyxNQUFNLGtEQUFrRCxDQUFDO0FBQy9GLE9BQU8sRUFBQywrQkFBK0IsRUFBQyxNQUFNLG9DQUFvQyxDQUFDO0FBQ25GLE9BQU8sRUFBQyxrQ0FBa0MsRUFBQyxNQUFNLHVDQUF1QyxDQUFDO0FBQ3pGLE9BQU8sRUFBQyxvQ0FBb0MsRUFBQyxNQUFNLDRCQUE0QixDQUFDO0FBQ2hGLE9BQU8sRUFBQyxzQkFBc0IsRUFBQyxNQUFNLGlDQUFpQyxDQUFDO0FBRXZFOzs7R0FHRztBQUNILE1BQU0sQ0FBQyxNQUFNLE9BQU8sR0FBK0I7SUFDakQseUNBQXlDO0lBQ3pDLG1DQUFtQztJQUNuQyxzQkFBc0I7SUFDdEIsZUFBZTtJQUNmLGdDQUFnQztJQUNoQyxpQkFBaUI7SUFDakIsMEJBQTBCO0lBQzFCLCtCQUErQjtJQUMvQixrQ0FBa0M7SUFDbEMsMEJBQTBCO0lBQzFCLDZCQUE2QjtJQUM3Qiw2QkFBNkI7SUFFN0IsNkNBQTZDO0lBQzdDLG9DQUFvQztDQUNyQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBMTENcbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5cbmltcG9ydCB7UmVsZWFzZUFjdGlvbkNvbnN0cnVjdG9yfSBmcm9tICcuLi9hY3Rpb25zLmpzJztcbmltcG9ydCB7Q29uZmlndXJlTmV4dEFzTWFqb3JBY3Rpb259IGZyb20gJy4vY29uZmlndXJlLW5leHQtYXMtbWFqb3IuanMnO1xuaW1wb3J0IHtDdXRMb25nVGVybVN1cHBvcnRQYXRjaEFjdGlvbn0gZnJvbSAnLi9jdXQtbHRzLXBhdGNoLmpzJztcbmltcG9ydCB7Q3V0TmV3UGF0Y2hBY3Rpb259IGZyb20gJy4vY3V0LW5ldy1wYXRjaC5qcyc7XG5pbXBvcnQge0N1dE5wbU5leHRQcmVyZWxlYXNlQWN0aW9ufSBmcm9tICcuL2N1dC1ucG0tbmV4dC1wcmVyZWxlYXNlLmpzJztcbmltcG9ydCB7Q3V0TnBtTmV4dFJlbGVhc2VDYW5kaWRhdGVBY3Rpb259IGZyb20gJy4vY3V0LW5wbS1uZXh0LXJlbGVhc2UtY2FuZGlkYXRlLmpzJztcbmltcG9ydCB7Q3V0U3RhYmxlQWN0aW9ufSBmcm9tICcuL2N1dC1zdGFibGUuanMnO1xuaW1wb3J0IHtDdXRFeGNlcHRpb25hbE1pbm9yUHJlcmVsZWFzZUFjdGlvbn0gZnJvbSAnLi9leGNlcHRpb25hbC1taW5vci9jdXQtZXhjZXB0aW9uYWwtbWlub3ItcHJlcmVsZWFzZS5qcyc7XG5pbXBvcnQge0N1dEV4Y2VwdGlvbmFsTWlub3JSZWxlYXNlQ2FuZGlkYXRlQWN0aW9ufSBmcm9tICcuL2V4Y2VwdGlvbmFsLW1pbm9yL2N1dC1leGNlcHRpb25hbC1taW5vci1yZWxlYXNlLWNhbmRpZGF0ZS5qcyc7XG5pbXBvcnQge1ByZXBhcmVFeGNlcHRpb25hbE1pbm9yQWN0aW9ufSBmcm9tICcuL2V4Y2VwdGlvbmFsLW1pbm9yL3ByZXBhcmUtZXhjZXB0aW9uYWwtbWlub3IuanMnO1xuaW1wb3J0IHtNb3ZlTmV4dEludG9GZWF0dXJlRnJlZXplQWN0aW9ufSBmcm9tICcuL21vdmUtbmV4dC1pbnRvLWZlYXR1cmUtZnJlZXplLmpzJztcbmltcG9ydCB7TW92ZU5leHRJbnRvUmVsZWFzZUNhbmRpZGF0ZUFjdGlvbn0gZnJvbSAnLi9tb3ZlLW5leHQtaW50by1yZWxlYXNlLWNhbmRpZGF0ZS5qcyc7XG5pbXBvcnQge1NwZWNpYWxDdXRMb25nVGVybVN1cHBvcnRNaW5vckFjdGlvbn0gZnJvbSAnLi9zcGVjaWFsL2N1dC1sdHMtbWlub3IuanMnO1xuaW1wb3J0IHtUYWdSZWNlbnRNYWpvckFzTGF0ZXN0fSBmcm9tICcuL3RhZy1yZWNlbnQtbWFqb3ItYXMtbGF0ZXN0LmpzJztcblxuLyoqXG4gKiBMaXN0IG9mIHJlbGVhc2UgYWN0aW9ucyBzdXBwb3J0ZWQgYnkgdGhlIHJlbGVhc2Ugc3RhZ2luZyB0b29sLiBUaGVzZSBhcmUgc29ydGVkXG4gKiBieSBwcmlvcml0eS4gQWN0aW9ucyB3aGljaCBhcmUgc2VsZWN0YWJsZSBhcmUgc29ydGVkIGJhc2VkIG9uIHRoaXMgZGVjbGFyYXRpb24gb3JkZXIuXG4gKi9cbmV4cG9ydCBjb25zdCBhY3Rpb25zOiBSZWxlYXNlQWN0aW9uQ29uc3RydWN0b3JbXSA9IFtcbiAgQ3V0RXhjZXB0aW9uYWxNaW5vclJlbGVhc2VDYW5kaWRhdGVBY3Rpb24sXG4gIEN1dEV4Y2VwdGlvbmFsTWlub3JQcmVyZWxlYXNlQWN0aW9uLFxuICBUYWdSZWNlbnRNYWpvckFzTGF0ZXN0LFxuICBDdXRTdGFibGVBY3Rpb24sXG4gIEN1dE5wbU5leHRSZWxlYXNlQ2FuZGlkYXRlQWN0aW9uLFxuICBDdXROZXdQYXRjaEFjdGlvbixcbiAgQ3V0TnBtTmV4dFByZXJlbGVhc2VBY3Rpb24sXG4gIE1vdmVOZXh0SW50b0ZlYXR1cmVGcmVlemVBY3Rpb24sXG4gIE1vdmVOZXh0SW50b1JlbGVhc2VDYW5kaWRhdGVBY3Rpb24sXG4gIENvbmZpZ3VyZU5leHRBc01ham9yQWN0aW9uLFxuICBQcmVwYXJlRXhjZXB0aW9uYWxNaW5vckFjdGlvbixcbiAgQ3V0TG9uZ1Rlcm1TdXBwb3J0UGF0Y2hBY3Rpb24sXG5cbiAgLy8gU3BlY2lhbCBhY3Rpb25zLiBOb3QgZGlzcGxheWVkIGJ5IGRlZmF1bHQuXG4gIFNwZWNpYWxDdXRMb25nVGVybVN1cHBvcnRNaW5vckFjdGlvbixcbl07XG4iXX0=