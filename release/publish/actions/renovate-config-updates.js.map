{"version":3,"file":"renovate-config-updates.js","sourceRoot":"","sources":["renovate-config-updates.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,UAAU,EAAC,MAAM,SAAS,CAAC;AACnC,OAAO,EAAC,KAAK,EAAE,GAAG,EAAC,MAAM,2BAA2B,CAAC;AACrD,OAAO,EAAC,IAAI,EAAC,MAAM,WAAW,CAAC;AAC/B,OAAO,EAAC,SAAS,EAAE,QAAQ,EAAC,MAAM,kBAAkB,CAAC;AAWrD,MAAM,CAAC,KAAK,UAAU,oBAAoB,CACxC,UAAkB,EAClB,aAAqB;IAErB,MAAM,kBAAkB,GAAG,IAAI,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;IAC7D,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,EAAE,CAAC;QACpC,GAAG,CAAC,IAAI,CAAC,6DAA6D,CAAC,CAAC;QACxE,OAAO,IAAI,CAAC;IACd,CAAC;IAED,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;IAC3D,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAA4B,CAAC;IACjE,MAAM,kBAAkB,GAAG,UAAU,CAAC,oBAAoB,CAAC,CAAC;IAE5D,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,kBAAkB,CAAC,IAAI,kBAAkB,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QAC1E,GAAG,CAAC,IAAI,CACN,+FAA+F,CAChG,CAAC;QAEF,OAAO,IAAI,CAAC;IACd,CAAC;IAED,UAAU,CAAC,oBAAoB,CAAC,GAAG,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;IAE3D,MAAM,SAAS,CAAC,kBAAkB,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;IAE9E,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAC,CAAC;IAClD,OAAO,kBAAkB,CAAC;AAC5B,CAAC","sourcesContent":["import {existsSync} from 'node:fs';\nimport {green, Log} from '../../../utils/logging.js';\nimport {join} from 'node:path';\nimport {writeFile, readFile} from 'node:fs/promises';\n\n/**\n * Updates the `renovate.json` configuration file to include a new base branch.\n * It also updates specific target labels within the package rules.\n *\n * @param projectDir - The path to the project directory.\n * @param newBranchName - The name of the new branch to add to the base branches list.\n * @returns A promise that resolves to the path of the modified `renovate.json` file if updated,\n * or `null` if the file was not found or the `baseBranchPatterns` array has an unexpected format.\n */\nexport async function updateRenovateConfig(\n  projectDir: string,\n  newBranchName: string,\n): Promise<string | null> {\n  const renovateConfigPath = join(projectDir, 'renovate.json');\n  if (!existsSync(renovateConfigPath)) {\n    Log.warn(`  ✘   Skipped updating Renovate config as it was not found.`);\n    return null;\n  }\n\n  const config = await readFile(renovateConfigPath, 'utf-8');\n  const configJson = JSON.parse(config) as Record<string, unknown>;\n  const baseBranchPatterns = configJson['baseBranchPatterns'];\n\n  if (!Array.isArray(baseBranchPatterns) || baseBranchPatterns.length !== 2) {\n    Log.warn(\n      `  ✘   Skipped updating Renovate config: \"baseBranchPatterns\" must contain exactly 2 branches.`,\n    );\n\n    return null;\n  }\n\n  configJson['baseBranchPatterns'] = ['main', newBranchName];\n\n  await writeFile(renovateConfigPath, JSON.stringify(configJson, undefined, 2));\n\n  Log.info(green(`  ✓   Updated Renovate config.`));\n  return renovateConfigPath;\n}\n"]}