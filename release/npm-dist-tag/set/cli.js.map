{"version":3,"file":"cli.js","sourceRoot":"","sources":["cli.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// ---- **IMPORTANT** ----\n// This command is part of our external commands invoked by the release publish\n// command. Before making changes, keep in mind that more recent `ng-dev` versions\n// can still invoke this command.\n// ------------------------\n\nimport semver from 'semver';\nimport {Argv, Arguments, CommandModule} from 'yargs';\nimport {getConfig} from '../../../utils/config.js';\n\nimport {Log, bold, green} from '../../../utils/logging.js';\nimport {Spinner} from '../../../utils/spinner.js';\nimport {assertValidReleaseConfig} from '../../config/index.js';\nimport {NpmCommand} from '../../versioning/npm-command.js';\nimport {\n  createExperimentalSemver,\n  isExperimentalSemver,\n} from '../../versioning/experimental-versions.js';\n\n/** Command line options for setting an NPM dist tag. */\nexport interface ReleaseNpmDistTagSetOptions {\n  tagName: string;\n  targetVersion: string;\n  skipExperimentalPackages: boolean;\n}\n\nfunction builder(args: Argv): Argv<ReleaseNpmDistTagSetOptions> {\n  return args\n    .positional('tagName', {\n      type: 'string',\n      demandOption: true,\n      description: 'Name of the NPM dist tag.',\n    })\n    .positional('targetVersion', {\n      type: 'string',\n      demandOption: true,\n      description:\n        'Version to which the NPM dist tag should be set.\\nThis version will be ' +\n        'converted to an experimental version for experimental packages.',\n    })\n    .option('skipExperimentalPackages', {\n      type: 'boolean',\n      description: 'Whether the dist tag should not be set for experimental NPM packages.',\n      default: false,\n    });\n}\n\n/** Yargs command handler for setting an NPM dist tag. */\nasync function handler(args: Arguments<ReleaseNpmDistTagSetOptions>) {\n  const {targetVersion: rawVersion, tagName, skipExperimentalPackages} = args;\n  const config = await getConfig();\n  assertValidReleaseConfig(config);\n  const {npmPackages, publishRegistry} = config.release;\n  const version = semver.parse(rawVersion);\n\n  if (version === null) {\n    Log.error(`Invalid version specified (${rawVersion}). Unable to set NPM dist tag.`);\n    process.exit(1);\n  } else if (isExperimentalSemver(version)) {\n    Log.error(\n      `Unexpected experimental SemVer version specified. This command expects a ` +\n        `non-experimental project SemVer version.`,\n    );\n    process.exit(1);\n  }\n\n  Log.debug(`Setting \"${tagName}\" NPM dist tag for release packages to v${version}.`);\n  const spinner = new Spinner('');\n\n  for (const pkg of npmPackages) {\n    // If `--skip-experimental-packages` is specified, all NPM packages which\n    // are marked as experimental will not receive the NPM dist tag update.\n    if (pkg.experimental && skipExperimentalPackages) {\n      spinner.update(`Skipping \"${pkg.name}\" due to it being experimental.`);\n      continue;\n    }\n\n    spinner.update(`Setting NPM dist tag for \"${pkg.name}\"`);\n    const distTagVersion = pkg.experimental ? createExperimentalSemver(version!) : version!;\n\n    try {\n      await NpmCommand.setDistTagForPackage(pkg.name, tagName, distTagVersion, publishRegistry);\n      Log.debug(`Successfully set \"${tagName}\" NPM dist tag for \"${pkg.name}\".`);\n    } catch (e) {\n      spinner.complete();\n      Log.error(e);\n      Log.error(`  ✘   An error occurred while setting the NPM dist tag for \"${pkg.name}\".`);\n      process.exit(1);\n    }\n  }\n\n  spinner.complete();\n  Log.info(green(`  ✓   Set NPM dist tag for all release packages.`));\n  Log.info(green(`      ${bold(tagName)} will now point to ${bold(`v${version}`)}.`));\n}\n\n/** CLI command module for setting an NPM dist tag. */\nexport const ReleaseNpmDistTagSetCommand: CommandModule<{}, ReleaseNpmDistTagSetOptions> = {\n  builder,\n  handler,\n  command: 'set <tag-name> <target-version>',\n  describe: 'Sets a given NPM dist tag for all release packages.',\n};\n"]}