{"version":3,"file":"npm-command.js","sourceRoot":"","sources":["npm-command.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport semver from 'semver';\n\nimport {ChildProcess} from '../../utils/child-process.js';\n\nimport {NpmDistTag} from './npm-registry.js';\n\nexport abstract class NpmCommand {\n  /**\n   * Runs NPM publish within a specified package directory.\n   * @throws With the process log output if the publish failed.\n   */\n  static async publish(packagePath: string, distTag: NpmDistTag, registryUrl: string | undefined) {\n    const args = ['publish', '--access', 'public', '--tag', distTag];\n    // If a custom registry URL has been specified, add the `--registry` flag.\n    if (registryUrl !== undefined) {\n      args.push('--registry', registryUrl);\n    }\n    await ChildProcess.spawn('npm', args, {cwd: packagePath, mode: 'silent'});\n  }\n\n  /**\n   * Sets the NPM tag to the specified version for the given package.\n   * @throws With the process log output if the tagging failed.\n   */\n  static async setDistTagForPackage(\n    packageName: string,\n    distTag: string,\n    version: semver.SemVer,\n    registryUrl: string | undefined,\n  ) {\n    const args = ['dist-tag', 'add', `${packageName}@${version}`, distTag];\n    // If a custom registry URL has been specified, add the `--registry` flag.\n    if (registryUrl !== undefined) {\n      args.push('--registry', registryUrl);\n    }\n    await ChildProcess.spawn('npm', args, {mode: 'silent'});\n  }\n\n  /**\n   * Deletes the specified NPM tag for the given package.\n   * @throws With the process log output if the removal failed.\n   */\n  static async deleteDistTagForPackage(\n    packageName: string,\n    distTag: string,\n    registryUrl: string | undefined,\n  ) {\n    const args = ['dist-tag', 'rm', packageName, distTag];\n    // If a custom registry URL has been specified, add the `--registry` flag.\n    if (registryUrl !== undefined) {\n      args.push('--registry', registryUrl);\n    }\n    await ChildProcess.spawn('npm', args, {mode: 'silent'});\n  }\n\n  /**\n   * Checks whether the user is currently logged into NPM.\n   * @returns Whether the user is currently logged into NPM.\n   */\n  static async checkIsLoggedIn(registryUrl: string | undefined): Promise<boolean> {\n    const args = ['whoami'];\n    // If a custom registry URL has been specified, add the `--registry` flag.\n    if (registryUrl !== undefined) {\n      args.push('--registry', registryUrl);\n    }\n    try {\n      await ChildProcess.spawn('npm', args, {mode: 'silent'});\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Log into NPM at a provided registry using an interactive invocation.\n   * @throws With the `npm login` status code if the login failed.\n   */\n  static async startInteractiveLogin(registryUrl: string | undefined) {\n    const args = ['login', '--no-browser'];\n    // If a custom registry URL has been specified, add the `--registry` flag. The `--registry` flag\n    // must be spliced into the correct place in the command as npm expects it to be the flag\n    // immediately following the login subcommand.\n    if (registryUrl !== undefined) {\n      args.splice(1, 0, '--registry', registryUrl);\n    }\n    // The login command prompts for username, password and other profile information. Hence\n    // the process needs to be interactive (i.e. respecting current TTYs stdin).\n    await ChildProcess.spawnInteractive('npm', args);\n  }\n\n  /**\n   * Log out of NPM at a provided registry.\n   * @returns Whether the user was logged out of NPM.\n   */\n  static async logout(registryUrl: string | undefined): Promise<boolean> {\n    const args = ['logout'];\n    // If a custom registry URL has been specified, add the `--registry` flag. The `--registry` flag\n    // must be spliced into the correct place in the command as npm expects it to be the flag\n    // immediately following the logout subcommand.\n    if (registryUrl !== undefined) {\n      args.splice(1, 0, '--registry', registryUrl);\n    }\n    try {\n      await ChildProcess.spawn('npm', args, {mode: 'silent'});\n    } finally {\n      return this.checkIsLoggedIn(registryUrl);\n    }\n  }\n}\n"]}