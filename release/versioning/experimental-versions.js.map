{"version":3,"file":"experimental-versions.js","sourceRoot":"","sources":["experimental-versions.ts"],"names":[],"mappings":"AAQA,OAAO,MAAM,MAAM,QAAQ,CAAC;AAG5B,MAAM,UAAU,oBAAoB,CAAC,OAAsB;IACzD,OAAO,OAAO,CAAC,KAAK,KAAK,CAAC,IAAI,OAAO,CAAC,KAAK,IAAI,GAAG,CAAC;AACrD,CAAC;AAGD,MAAM,UAAU,wBAAwB,CAAC,OAA+B;IACtE,OAAO,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IACrC,MAAM,mBAAmB,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;IAChE,mBAAmB,CAAC,KAAK,GAAG,CAAC,CAAC;IAC9B,mBAAmB,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,GAAG,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC;IAChE,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,CAAC;AACzD,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport semver from 'semver';\n\n/** Gets whether the given version denotes an experimental SemVer version. */\nexport function isExperimentalSemver(version: semver.SemVer): boolean {\n  return version.major === 0 && version.minor >= 100;\n}\n\n/** Creates the equivalent experimental version for a provided SemVer. */\nexport function createExperimentalSemver(version: string | semver.SemVer): semver.SemVer {\n  version = new semver.SemVer(version);\n  const experimentalVersion = new semver.SemVer(version.format());\n  experimentalVersion.major = 0;\n  experimentalVersion.minor = version.major * 100 + version.minor;\n  return new semver.SemVer(experimentalVersion.format());\n}\n"]}