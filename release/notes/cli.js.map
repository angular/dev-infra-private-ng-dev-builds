{"version":3,"file":"cli.js","sourceRoot":"","sources":["cli.ts"],"names":[],"mappings":"AAOA,OAAO,MAAM,MAAM,QAAQ,CAAC;AAG5B,OAAO,EAAC,GAAG,EAAC,MAAM,wBAAwB,CAAC;AAE3C,OAAO,EAAC,YAAY,EAAC,MAAM,oBAAoB,CAAC;AAChD,OAAO,EAAC,SAAS,EAAC,MAAM,+BAA+B,CAAC;AAYxD,SAAS,OAAO,CAAC,IAAU;IACzB,OAAO,IAAI;SACR,MAAM,CAAC,gBAAgB,EAAE;QACxB,IAAI,EAAE,QAAQ;QACd,OAAO,EAAE,OAAO;QAChB,MAAM,EAAE,CAAC,OAAe,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;KACxD,CAAC;SACD,MAAM,CAAC,MAAM,EAAE;QACd,IAAI,EAAE,QAAQ;QACd,WAAW,EAAE,sDAAsD;QACnE,YAAY,EAAE,IAAI;KACnB,CAAC;SACD,MAAM,CAAC,IAAI,EAAE;QACZ,IAAI,EAAE,QAAQ;QACd,WAAW,EAAE,oDAAoD;QACjE,OAAO,EAAE,MAAM;KAChB,CAAC;SACD,MAAM,CAAC,MAAM,EAAE;QACd,IAAI,EAAE,QAAQ;QACd,WAAW,EAAE,qCAAqC;QAClD,OAAO,EAAE,CAAC,gBAAgB,EAAE,WAAW,CAAU;QACjD,OAAO,EAAE,WAAoB;KAC9B,CAAC;SACD,MAAM,CAAC,oBAAoB,EAAE;QAC5B,IAAI,EAAE,SAAS;QACf,OAAO,EAAE,KAAK;QACd,WAAW,EAAE,8DAA8D;KAC5E,CAAC,CAAC;AACP,CAAC;AAGD,KAAK,UAAU,OAAO,CAAC,EAAC,cAAc,EAAE,IAAI,EAAE,EAAE,EAAE,kBAAkB,EAAE,IAAI,EAAqB;IAE7F,MAAM,GAAG,GAAG,MAAM,SAAS,CAAC,GAAG,EAAE,CAAC;IAElC,MAAM,YAAY,GAAG,MAAM,YAAY,CAAC,QAAQ,CAAC,GAAG,EAAE,cAAc,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IAEhF,IAAI,kBAAkB,EAAE,CAAC;QACvB,MAAM,YAAY,CAAC,2BAA2B,EAAE,CAAC;QACjD,GAAG,CAAC,IAAI,CAAC,4BAA4B,cAAc,oBAAoB,CAAC,CAAC;QACzE,OAAO;IACT,CAAC;IAGD,MAAM,iBAAiB,GACrB,IAAI,KAAK,WAAW;QAClB,CAAC,CAAC,MAAM,YAAY,CAAC,iBAAiB,EAAE;QACxC,CAAC,CAAC,MAAM,YAAY,CAAC,qBAAqB,EAAE,CAAC;IAEjD,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;AAC1C,CAAC;AAGD,MAAM,CAAC,MAAM,yBAAyB,GAA+B;IACnE,OAAO;IACP,OAAO;IACP,OAAO,EAAE,OAAO;IAChB,QAAQ,EAAE,wBAAwB;CACnC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport semver from 'semver';\nimport {Argv, Arguments, CommandModule} from 'yargs';\n\nimport {Log} from '../../utils/logging.js';\n\nimport {ReleaseNotes} from './release-notes.js';\nimport {GitClient} from '../../utils/git/git-client.js';\n\n/** Command line options for building a release. */\nexport interface Options {\n  from: string;\n  to: string;\n  prependToChangelog: boolean;\n  releaseVersion: semver.SemVer;\n  type: 'github-release' | 'changelog';\n}\n\n/** Yargs command builder for configuring the `ng-dev release build` command. */\nfunction builder(argv: Argv): Argv<Options> {\n  return argv\n    .option('releaseVersion', {\n      type: 'string',\n      default: '0.0.0',\n      coerce: (version: string) => new semver.SemVer(version),\n    })\n    .option('from', {\n      type: 'string',\n      description: 'The git tag or ref to start the changelog entry from',\n      demandOption: true,\n    })\n    .option('to', {\n      type: 'string',\n      description: 'The git tag or ref to end the changelog entry with',\n      default: 'HEAD',\n    })\n    .option('type', {\n      type: 'string',\n      description: 'The type of release notes to create',\n      choices: ['github-release', 'changelog'] as const,\n      default: 'changelog' as const,\n    })\n    .option('prependToChangelog', {\n      type: 'boolean',\n      default: false,\n      description: 'Whether to update the changelog with the newly created entry',\n    });\n}\n\n/** Yargs command handler for generating release notes. */\nasync function handler({releaseVersion, from, to, prependToChangelog, type}: Arguments<Options>) {\n  /** Git client to use for generating the release notes. */\n  const git = await GitClient.get();\n  /** The ReleaseNotes instance to generate release notes. */\n  const releaseNotes = await ReleaseNotes.forRange(git, releaseVersion, from, to);\n\n  if (prependToChangelog) {\n    await releaseNotes.prependEntryToChangelogFile();\n    Log.info(`Added release notes for \"${releaseVersion}\" to the changelog`);\n    return;\n  }\n\n  /** The requested release notes entry. */\n  const releaseNotesEntry =\n    type === 'changelog'\n      ? await releaseNotes.getChangelogEntry()\n      : await releaseNotes.getGithubReleaseEntry();\n\n  process.stdout.write(releaseNotesEntry);\n}\n\n/** CLI command module for generating release notes. */\nexport const ReleaseNotesCommandModule: CommandModule<{}, Options> = {\n  builder,\n  handler,\n  command: 'notes',\n  describe: 'Generate release notes',\n};\n"]}