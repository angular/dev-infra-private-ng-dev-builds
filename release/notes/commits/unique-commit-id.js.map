{"version":3,"file":"unique-commit-id.js","sourceRoot":"","sources":["unique-commit-id.ts"],"names":[],"mappings":"AAiBA,MAAM,wBAAwB,GAAqB,CAAC,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;AAOjG,MAAM,UAAU,gCAAgC,CAAC,MAAc;IAE7D,OAAO,wBAAwB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACnE,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Commit} from '../../../commit-message/parse.js';\n\n/**\n * Fields from a `Commit` to incorporate when building up an unique\n * id for a commit message.\n *\n * Note: The header incorporates the commit type, scope and message\n * but lacks information for fixup, revert or squash commits..\n */\nconst fieldsToIncorporateForId: (keyof Commit)[] = ['header', 'isFixup', 'isRevert', 'isSquash'];\n\n/**\n * Computes an unique id for the given commit using its commit message.\n * This can be helpful for comparisons, if commits differ in SHAs due\n * to cherry-picking.\n */\nexport function computeUniqueIdFromCommitMessage(commit: Commit): string {\n  // Join all resolved fields with a special character to build up an id.\n  return fieldsToIncorporateForId.map((f) => commit[f]).join('ɵɵ');\n}\n"]}