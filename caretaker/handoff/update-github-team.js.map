{"version":3,"file":"update-github-team.js","sourceRoot":"","sources":["update-github-team.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Prompt} from '../../utils/prompt.js';\nimport {getConfig, assertValidCaretakerConfig} from '../../utils/config.js';\n\nimport {green, Log} from '../../utils/logging.js';\nimport {AuthenticatedGitClient} from '../../utils/git/authenticated-git-client.js';\n\n/** Update the Github caretaker group, using a prompt to obtain the new caretaker group members.  */\nexport async function updateCaretakerTeamViaPrompt() {\n  /** Caretaker specific configuration. */\n  const config = await getConfig([assertValidCaretakerConfig]);\n  const {caretakerGroup} = config.caretaker;\n\n  if (caretakerGroup === undefined) {\n    throw Error('`caretakerGroup` is not defined in the `caretaker` config');\n  }\n\n  /** The list of current members in the group. */\n  const current = new Set(await getGroupMembers(caretakerGroup));\n  const [roster, emeaRoster] = await Promise.all([\n    getGroupMembers(`${caretakerGroup}-roster`),\n    getGroupMembers(`${caretakerGroup}-roster-emea`),\n  ]);\n  if (emeaRoster === null) {\n    Log.debug(`  Unable to retrieve members of the group: ${caretakerGroup}-roster-emea`);\n  }\n  if (roster === null) {\n    Log.error(`  ✘  Unable to retrieve members of the group: ${caretakerGroup}-roster`);\n    return;\n  }\n\n  /** The list of users selected to be members of the caretaker group. */\n  const selectedPrimaryAndSecondary = await Prompt.checkbox<string>({\n    choices: roster.map((member) => ({\n      value: member,\n      checked: current.has(member),\n    })),\n    message:\n      'Select 2 caretakers for the upcoming rotation (primary and secondary, http://go/ng-caretaker-schedule):',\n    validate: (value) => {\n      if (value.length !== 2) {\n        return 'Please select exactly 2 caretakers for the upcoming rotation.';\n      }\n      return true;\n    },\n  });\n\n  let selectedEmea = '';\n  if (emeaRoster !== null) {\n    const emeaOptions = emeaRoster\n      // Do not show members that are already selected as primary/secondary.\n      .filter((m) => !selectedPrimaryAndSecondary.includes(m))\n      .map((member) => ({\n        value: member,\n        name: `${member} (EMEA)`,\n        checked: current.has(member),\n      }));\n    selectedEmea = await Prompt.select<string>({\n      choices: emeaOptions,\n      message: 'Select EMEA caretaker (http://go/ng-caretaker-schedule-emea)',\n    });\n\n    /** Whether the user positively confirmed the selected made. */\n    const confirmation = await Prompt.confirm({\n      default: true,\n      message: 'Are you sure?',\n    });\n\n    if (confirmation === false) {\n      Log.warn('  ⚠  Skipping caretaker group update.');\n      return;\n    }\n  }\n\n  const selectedSorted = [...selectedPrimaryAndSecondary, selectedEmea].filter((_) => !!_).sort();\n  const currentSorted = Array.from(current).sort();\n\n  if (JSON.stringify(selectedSorted) === JSON.stringify(currentSorted)) {\n    Log.info(green('  ✔  Caretaker group already up to date.'));\n    return;\n  }\n\n  try {\n    await setCaretakerGroup(caretakerGroup, selectedSorted);\n  } catch {\n    Log.error('  ✘  Failed to update caretaker group.');\n    return;\n  }\n  Log.info(green('  ✔  Successfully updated caretaker group'));\n}\n\n/** Retrieve the current list of members for the provided group. */\nasync function getGroupMembers(group: string) {\n  /** The authenticated GitClient instance. */\n  const git = await AuthenticatedGitClient.get();\n  try {\n    return (\n      await git.github.teams.listMembersInOrg({\n        org: git.remoteConfig.owner,\n        team_slug: group,\n      })\n    ).data\n      .filter((_) => !!_)\n      .map((member) => member!.login);\n  } catch (e) {\n    Log.debug(e);\n    return null;\n  }\n}\n\nasync function setCaretakerGroup(group: string, members: string[]) {\n  /** The authenticated GitClient instance. */\n  const git = await AuthenticatedGitClient.get();\n  /** The full name of the group <org>/<group name>. */\n  const fullSlug = `${git.remoteConfig.owner}/${group}`;\n  /** The list of current members of the group. */\n  const current = (await getGroupMembers(group)) || [];\n  /** The list of users to be removed from the group. */\n  const removed = current.filter((login) => !members.includes(login));\n  /** Add a user to the group. */\n  const add = async (username: string) => {\n    Log.debug(`Adding ${username} to ${fullSlug}.`);\n    await git.github.teams.addOrUpdateMembershipForUserInOrg({\n      org: git.remoteConfig.owner,\n      team_slug: group,\n      username,\n      role: 'maintainer',\n    });\n  };\n  /** Remove a user from the group. */\n  const remove = async (username: string) => {\n    Log.debug(`Removing ${username} from ${fullSlug}.`);\n    await git.github.teams.removeMembershipForUserInOrg({\n      org: git.remoteConfig.owner,\n      team_slug: group,\n      username,\n    });\n  };\n\n  Log.debug.group(`Caretaker Group: ${fullSlug}`);\n  Log.debug(`Current Membership: ${current.join(', ')}`);\n  Log.debug(`New Membership:     ${members.join(', ')}`);\n  Log.debug(`Removed:            ${removed.join(', ')}`);\n  Log.debug.groupEnd();\n\n  // Add members before removing to prevent the account performing the action from removing their\n  // permissions to change the group membership early.\n  await Promise.all(members.map(add));\n  await Promise.all(removed.map(remove));\n\n  Log.debug(green(`Successfully updated ${fullSlug}`));\n}\n"]}