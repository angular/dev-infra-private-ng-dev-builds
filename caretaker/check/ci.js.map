{"version":3,"file":"ci.js","sourceRoot":"","sources":["ci.ts"],"names":[],"mappings":"AAQA,OAAO,EACL,mBAAmB,EACnB,iBAAiB,GAGlB,MAAM,mCAAmC,CAAC;AAC3C,OAAO,YAAY,MAAM,kCAAkC,CAAC;AAE5D,OAAO,EAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAC,MAAM,wBAAwB,CAAC;AACrE,OAAO,EAAC,UAAU,EAAC,MAAM,WAAW,CAAC;AAarC,MAAM,OAAO,QAAS,SAAQ,UAAkB;IACrC,KAAK,CAAC,YAAY;QACzB,MAAM,cAAc,GAAG,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC7D,MAAM,IAAI,GAAuB;YAC/B,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM;YACpB,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY;YACxB,cAAc;SACf,CAAC;QACF,MAAM,EAAC,MAAM,EAAE,IAAI,EAAE,gBAAgB,EAAE,gBAAgB,EAAC,GACtD,MAAM,mBAAmB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACxC,MAAM,gBAAgB,GAAG,MAAM,CAAC,OAAO,CAAC,EAAC,gBAAgB,EAAE,gBAAgB,EAAE,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC,GAAG,CAC7F,KAAK,EAAE,CAAC,SAAS,EAAE,KAAK,CAAgC,EAAE,EAAE;YAC1D,IAAI,KAAK,KAAK,IAAI,EAAE,CAAC;gBACnB,OAAO;oBACL,MAAM,EAAE,KAAK;oBACb,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,EAAE;oBACT,MAAM,EAAE,IAAI;iBACb,CAAC;YACJ,CAAC;YAED,MAAM,MAAM,GAAG,CACb,MAAM,YAAY,CAAC,kCAAkC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;gBACrE,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY;gBACxB,GAAG,EAAE,KAAK,CAAC,UAAU;aACtB,CAAC,CACH,CAAC,MAAM,CAAC;YAET,OAAO;gBACL,MAAM,EAAE,IAAI;gBACZ,IAAI,EAAE,KAAK,CAAC,UAAU;gBACtB,KAAK,EAAE,GAAG,SAAS,KAAK,KAAK,CAAC,UAAU,GAAG;gBAC3C,MAAM;aACP,CAAC;QACJ,CAAC,CACF,CAAC;QAEF,OAAO,MAAM,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;IAC7C,CAAC;IAEQ,KAAK,CAAC,eAAe;QAC5B,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC;QAC7B,MAAM,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;QAC9E,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;YACtB,IAAI,MAAM,CAAC,MAAM,KAAK,KAAK,EAAE,CAAC;gBAC5B,GAAG,CAAC,KAAK,CAAC,+BAA+B,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;gBACxD,OAAO;YACT,CAAC;YACD,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;YAClD,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,EAAE,CAAC;gBAC3B,GAAG,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,6BAA6B,CAAC,CAAC;YACxD,CAAC;iBAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,EAAE,CAAC;gBACvC,GAAG,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACrC,CAAC;iBAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,EAAE,CAAC;gBACvC,GAAG,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACtC,CAAC;iBAAM,CAAC;gBACN,GAAG,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACnC,CAAC;QACH,CAAC,CAAC,CAAC;QACH,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QACpB,GAAG,CAAC,IAAI,EAAE,CAAC;IACb,CAAC;CACF","sourcesContent":["/**\n * @license\n * Copyright Google LLC\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ActiveReleaseTrains,\n  getNextBranchName,\n  ReleaseRepoWithApi,\n  ReleaseTrain,\n} from '../../release/versioning/index.js';\nimport githubMacros from '../../utils/git/github-macros.js';\n\nimport {bold, green, Log, red, yellow} from '../../utils/logging.js';\nimport {BaseModule} from './base.js';\n\n/** The result of checking a branch on CI. */\ntype CiBranchStatus = 'pending' | 'passing' | 'failing' | null;\n\n/** A list of results for checking CI branches. */\ntype CiData = {\n  active: boolean;\n  name: string;\n  label: string;\n  status: CiBranchStatus;\n}[];\n\nexport class CiModule extends BaseModule<CiData> {\n  override async retrieveData() {\n    const nextBranchName = getNextBranchName(this.config.github);\n    const repo: ReleaseRepoWithApi = {\n      api: this.git.github,\n      ...this.git.remoteConfig,\n      nextBranchName,\n    };\n    const {latest, next, releaseCandidate, exceptionalMinor} =\n      await ActiveReleaseTrains.fetch(repo);\n    const ciResultPromises = Object.entries({releaseCandidate, exceptionalMinor, latest, next}).map(\n      async ([trainName, train]: [string, ReleaseTrain | null]) => {\n        if (train === null) {\n          return {\n            active: false,\n            name: trainName,\n            label: '',\n            status: null,\n          };\n        }\n\n        const status = (\n          await githubMacros.getCombinedChecksAndStatusesForRef(this.git.github, {\n            ...this.git.remoteParams,\n            ref: train.branchName,\n          })\n        ).result;\n\n        return {\n          active: true,\n          name: train.branchName,\n          label: `${trainName} (${train.branchName})`,\n          status,\n        };\n      },\n    );\n\n    return await Promise.all(ciResultPromises);\n  }\n\n  override async printToTerminal() {\n    const data = await this.data;\n    const minLabelLength = Math.max(...data.map((result) => result.label.length));\n    Log.info.group(bold(`CI`));\n    data.forEach((result) => {\n      if (result.active === false) {\n        Log.debug(`No active release train for ${result.name}`);\n        return;\n      }\n      const label = result.label.padEnd(minLabelLength);\n      if (result.status === null) {\n        Log.info(`${result.name} branch was not found on CI`);\n      } else if (result.status === 'passing') {\n        Log.info(`${label} ${green('✔')}`);\n      } else if (result.status === 'pending') {\n        Log.info(`${label} ${yellow('⏺')}`);\n      } else {\n        Log.info(`${label} ${red('✘')}`);\n      }\n    });\n    Log.info.groupEnd();\n    Log.info();\n  }\n}\n"]}