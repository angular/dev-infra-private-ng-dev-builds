{"version":3,"file":"cli.js","sourceRoot":"","sources":["cli.ts"],"names":[],"mappings":"AAQA,OAAO,EAAC,SAAS,EAAC,MAAM,IAAI,CAAC;AAC7B,OAAO,EAAC,OAAO,EAAC,MAAM,MAAM,CAAC;AAG7B,OAAO,EAAC,WAAW,EAAC,MAAM,8BAA8B,CAAC;AACzD,OAAO,EAAC,YAAY,EAAC,MAAM,8BAA8B,CAAC;AAC1D,OAAO,EAAC,GAAG,EAAE,KAAK,EAAC,MAAM,wBAAwB,CAAC;AAClD,OAAO,EAAC,SAAS,EAAC,MAAM,uBAAuB,CAAC;AAChD,OAAO,EAAC,wBAAwB,EAAC,MAAM,+BAA+B,CAAC;AAQvE,SAAS,OAAO,CAAC,IAAU;IACzB,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE;QACpC,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,IAAI;QACf,MAAM,EAAE,CAAC,IAAY,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;QACvC,YAAY,EAAE,IAAI;KACnB,CAAC,CAAC;AACL,CAAC;AAGD,KAAK,UAAU,OAAO,CAAC,EAAC,WAAW,EAAiC;IAClE,IAAI,CAAC;QACH,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC;YAC1C,GAAG,CAAC,KAAK,CAAC,gDAAgD,WAAW,EAAE,CAAC,CAAC;YACzE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;IACH,CAAC;IAAC,MAAM,CAAC;QACP,GAAG,CAAC,KAAK,CAAC,oDAAoD,WAAW,EAAE,CAAC,CAAC;QAC7E,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC;IAED,MAAM,MAAM,GAAG,MAAM,SAAS,EAAE,CAAC;IACjC,wBAAwB,CAAC,MAAM,CAAC,CAAC;IAEjC,MAAM,aAAa,GAAG,MAAM,WAAW,CAAC,WAAW,EAAE,CAAC;IAEtD,IAAI,aAAa,KAAK,IAAI,EAAE,CAAC;QAC3B,GAAG,CAAC,KAAK,CAAC,kEAAkE,CAAC,CAAC;QAC9E,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC;IACD,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC,CAAC;IAE7C,KAAK,MAAM,EAAC,UAAU,EAAE,IAAI,EAAC,IAAI,aAAa,EAAE,CAAC;QAC/C,MAAM,YAAY,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC;QAC5E,MAAM,YAAY,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;IACrF,CAAC;IAED,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,kDAAkD,CAAC,CAAC,CAAC;AACtE,CAAC;AAGD,MAAM,CAAC,MAAM,yBAAyB,GAA2C;IAC/E,OAAO;IACP,OAAO;IACP,OAAO,EAAE,8BAA8B;IACvC,QAAQ,EACN,wGAAwG;CAC3G,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {lstatSync} from 'fs';\nimport {resolve} from 'path';\nimport {Argv, Arguments, CommandModule} from 'yargs';\n\nimport {BuildWorker} from '../../release/build/index.js';\nimport {ChildProcess} from '../../utils/child-process.js';\nimport {Log, green} from '../../utils/logging.js';\nimport {getConfig} from '../../utils/config.js';\nimport {assertValidReleaseConfig} from '../../release/config/index.js';\n\n/** Command line options. */\nexport interface BuildAndLinkOptions {\n  projectRoot: string;\n}\n\n/** Yargs command builder for the command. */\nfunction builder(argv: Argv): Argv<BuildAndLinkOptions> {\n  return argv.positional('projectRoot', {\n    type: 'string',\n    normalize: true,\n    coerce: (path: string) => resolve(path),\n    demandOption: true,\n  });\n}\n\n/** Yargs command handler for the command. */\nasync function handler({projectRoot}: Arguments<BuildAndLinkOptions>) {\n  try {\n    if (!lstatSync(projectRoot).isDirectory()) {\n      Log.error(`  ✘   The 'projectRoot' must be a directory: ${projectRoot}`);\n      process.exit(1);\n    }\n  } catch {\n    Log.error(`  ✘   Could not find the 'projectRoot' provided: ${projectRoot}`);\n    process.exit(1);\n  }\n\n  const config = await getConfig();\n  assertValidReleaseConfig(config);\n\n  const builtPackages = await BuildWorker.invokeBuild();\n\n  if (builtPackages === null) {\n    Log.error(`  ✘   Could not build release output. Please check output above.`);\n    process.exit(1);\n  }\n  Log.info(green(` ✓  Built release output.`));\n\n  for (const {outputPath, name} of builtPackages) {\n    await ChildProcess.spawn('pnpm', ['--dir', outputPath, 'link', '--global']);\n    await ChildProcess.spawn('pnpm', ['--dir', projectRoot, 'link', '--global', name]);\n  }\n\n  Log.info(green(` ✓  Linked release packages in provided project.`));\n}\n\n/** CLI command module. */\nexport const BuildAndLinkCommandModule: CommandModule<{}, BuildAndLinkOptions> = {\n  builder,\n  handler,\n  command: 'build-and-link <projectRoot>',\n  describe:\n    'Builds the release output, registers the outputs as linked, and links via pnpm to the provided project',\n};\n"]}