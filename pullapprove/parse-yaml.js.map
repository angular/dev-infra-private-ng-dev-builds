{"version":3,"file":"parse-yaml.js","sourceRoot":"","sources":["parse-yaml.ts"],"names":[],"mappings":"AAOA,OAAO,EAAC,KAAK,IAAI,SAAS,EAAC,MAAM,MAAM,CAAC;AACxC,OAAO,EAAC,gBAAgB,EAAC,MAAM,YAAY,CAAC;AA2B5C,MAAM,UAAU,oBAAoB,CAAC,OAAe;IAClD,OAAO,SAAS,CAAC,OAAO,EAAE,EAAC,KAAK,EAAE,IAAI,EAAC,CAAsB,CAAC;AAChE,CAAC;AAGD,MAAM,UAAU,iBAAiB,CAAC,kBAA0B;IAE1D,MAAM,WAAW,GAAG,oBAAoB,CAAC,kBAAkB,CAAC,CAAC;IAC7D,OAAO,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE,EAAE;QAC9E,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,gBAAgB,CAAC,SAAS,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;IACvE,CAAC,EAAE,EAAwB,CAAC,CAAC;AAC/B,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {parse as parseYaml} from 'yaml';\nimport {PullApproveGroup} from './group.js';\n\nexport interface PullApproveGroupConfig {\n  conditions?: string[];\n  reviewers?:\n    | {\n        users: string[];\n        teams?: string[];\n      }\n    | {\n        teams: string[];\n      };\n}\n\nexport interface PullApproveConfig {\n  version: number;\n  github_api_version?: string;\n  pullapprove_conditions?: {\n    condition: string;\n    unmet_status: string;\n    explanation: string;\n  }[];\n  groups: {\n    [key: string]: PullApproveGroupConfig;\n  };\n}\n\nexport function parsePullApproveYaml(rawYaml: string): PullApproveConfig {\n  return parseYaml(rawYaml, {merge: true}) as PullApproveConfig;\n}\n\n/** Parses all of the groups defined in the pullapprove yaml. */\nexport function getGroupsFromYaml(pullApproveYamlRaw: string): PullApproveGroup[] {\n  /** JSON representation of the pullapprove yaml file. */\n  const pullApprove = parsePullApproveYaml(pullApproveYamlRaw);\n  return Object.entries(pullApprove.groups).reduce((groups, [groupName, group]) => {\n    return groups.concat(new PullApproveGroup(groupName, group, groups));\n  }, [] as PullApproveGroup[]);\n}\n"]}