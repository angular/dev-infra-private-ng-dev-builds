{"version":3,"file":"pullapprove_arrays.js","sourceRoot":"","sources":["pullapprove_arrays.ts"],"names":[],"mappings":"AASA,OAAO,EAAC,oCAAoC,EAAC,MAAM,uBAAuB,CAAC;AAC3E,OAAO,EAAC,eAAe,EAAC,MAAM,YAAY,CAAC;AAM3C,MAAM,OAAO,sBAAuB,SAAQ,KAAa;IAEvD,OAAO,CAAC,OAAe;QACrB,OAAO,IAAI,sBAAsB,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9F,CAAC;IAGD,OAAO,CAAC,OAAe;QACrB,OAAO,IAAI,sBAAsB,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/F,CAAC;CACF;AAMD,MAAM,OAAO,qBAAsB,SAAQ,KAAuB;IAChE,OAAO,CAAC,OAAe;QACrB,OAAO,IAAI,qBAAqB,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACtF,CAAC;IAGD,OAAO,CAAC,OAAe;QACrB,OAAO,IAAI,qBAAqB,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACtF,CAAC;IAED,IAAI,QAAQ;QACV,MAAM,IAAI,oCAAoC,EAAE,CAAC;IACnD,CAAC;IAED,IAAI,OAAO;QACT,MAAM,IAAI,oCAAoC,EAAE,CAAC;IACnD,CAAC;IAED,IAAI,MAAM;QACR,MAAM,IAAI,oCAAoC,EAAE,CAAC;IACnD,CAAC;IAED,IAAI,QAAQ;QACV,MAAM,IAAI,oCAAoC,EAAE,CAAC;IACnD,CAAC;IAED,IAAI,QAAQ;QACV,MAAM,IAAI,oCAAoC,EAAE,CAAC;IACnD,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IACtC,CAAC;CACF","sourcesContent":["/**\n * @license\n * Copyright Google LLC\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PullApproveGroup} from './group.js';\nimport {PullApproveGroupStateDependencyError} from './condition_errors.js';\nimport {getOrCreateGlob} from './utils.js';\n\n/**\n * Superset of a native array. The superset provides methods which mimic the\n * list data structure used in PullApprove for files in conditions.\n */\nexport class PullApproveStringArray extends Array<string> {\n  /** Returns a new array which only includes files that match the given pattern. */\n  include(pattern: string): PullApproveStringArray {\n    return new PullApproveStringArray(...this.filter((s) => getOrCreateGlob(pattern).match(s)));\n  }\n\n  /** Returns a new array which only includes files that did not match the given pattern. */\n  exclude(pattern: string): PullApproveStringArray {\n    return new PullApproveStringArray(...this.filter((s) => !getOrCreateGlob(pattern).match(s)));\n  }\n}\n\n/**\n * Superset of a native array. The superset provides methods which mimic the\n * list data structure used in PullApprove for groups in conditions.\n */\nexport class PullApproveGroupArray extends Array<PullApproveGroup> {\n  include(pattern: string): PullApproveGroupArray {\n    return new PullApproveGroupArray(...this.filter((s) => s.groupName.match(pattern)));\n  }\n\n  /** Returns a new array which only includes files that did not match the given pattern. */\n  exclude(pattern: string): PullApproveGroupArray {\n    return new PullApproveGroupArray(...this.filter((s) => s.groupName.match(pattern)));\n  }\n\n  get approved() {\n    throw new PullApproveGroupStateDependencyError();\n  }\n\n  get pending() {\n    throw new PullApproveGroupStateDependencyError();\n  }\n\n  get active() {\n    throw new PullApproveGroupStateDependencyError();\n  }\n\n  get inactive() {\n    throw new PullApproveGroupStateDependencyError();\n  }\n\n  get rejected() {\n    throw new PullApproveGroupStateDependencyError();\n  }\n\n  get names() {\n    return this.map((g) => g.groupName);\n  }\n}\n"]}