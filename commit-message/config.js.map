{"version":3,"file":"config.js","sourceRoot":"","sources":["config.ts"],"names":[],"mappings":"AAQA,OAAO,EAAC,qBAAqB,EAAc,MAAM,oBAAoB,CAAC;AAYtE,MAAM,UAAU,8BAA8B,CAC5C,MAAyD;IAEzD,IAAI,MAAM,CAAC,aAAa,KAAK,SAAS,EAAE,CAAC;QACvC,MAAM,IAAI,qBAAqB,CAAC,8CAA8C,CAAC,CAAC;IAClF,CAAC;AACH,CAAC;AAGD,MAAM,CAAN,IAAY,gBAIX;AAJD,WAAY,gBAAgB;IAC1B,+DAAQ,CAAA;IACR,+DAAQ,CAAA;IACR,iEAAS,CAAA;AACX,CAAC,EAJW,gBAAgB,KAAhB,gBAAgB,QAI3B;AAED,MAAM,CAAN,IAAY,iBAGX;AAHD,WAAY,iBAAiB;IAC3B,6DAAM,CAAA;IACN,+DAAO,CAAA;AACT,CAAC,EAHW,iBAAiB,KAAjB,iBAAiB,QAG5B;AAWD,MAAM,CAAC,MAAM,YAAY,GAAgC;IACvD,KAAK,EAAE;QACL,IAAI,EAAE,OAAO;QACb,WAAW,EAAE,sDAAsD;QACnE,KAAK,EAAE,gBAAgB,CAAC,QAAQ;QAChC,iBAAiB,EAAE,iBAAiB,CAAC,MAAM;KAC5C;IACD,EAAE,EAAE;QACF,IAAI,EAAE,IAAI;QACV,WAAW,EAAE,qDAAqD;QAClE,KAAK,EAAE,gBAAgB,CAAC,SAAS;QACjC,iBAAiB,EAAE,iBAAiB,CAAC,MAAM;KAC5C;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,MAAM;QACZ,WAAW,EAAE,kDAAkD;QAC/D,KAAK,EAAE,gBAAgB,CAAC,QAAQ;QAChC,iBAAiB,EAAE,iBAAiB,CAAC,MAAM;KAC5C;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,MAAM;QACZ,WAAW,EAAE,uBAAuB;QACpC,KAAK,EAAE,gBAAgB,CAAC,QAAQ;QAChC,iBAAiB,EAAE,iBAAiB,CAAC,OAAO;KAC7C;IACD,GAAG,EAAE;QACH,IAAI,EAAE,KAAK;QACX,WAAW,EAAE,2CAA2C;QACxD,KAAK,EAAE,gBAAgB,CAAC,QAAQ;QAChC,iBAAiB,EAAE,iBAAiB,CAAC,OAAO;KAC7C;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,MAAM;QACZ,WAAW,EAAE,iEAAiE;QAC9E,KAAK,EAAE,gBAAgB,CAAC,QAAQ;QAChC,iBAAiB,EAAE,iBAAiB,CAAC,OAAO;KAC7C;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,UAAU;QAChB,WAAW,EAAE,8EAA8E;QAC3F,KAAK,EAAE,gBAAgB,CAAC,QAAQ;QAChC,iBAAiB,EAAE,iBAAiB,CAAC,MAAM;KAC5C;IACD,OAAO,EAAE;QACP,IAAI,EAAE,SAAS;QACf,WAAW,EAAE,mCAAmC;QAChD,KAAK,EAAE,gBAAgB,CAAC,SAAS;QACjC,iBAAiB,EAAE,iBAAiB,CAAC,MAAM;KAC5C;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,MAAM;QACZ,WAAW,EAAE,8DAA8D;QAC3E,KAAK,EAAE,gBAAgB,CAAC,QAAQ;QAChC,iBAAiB,EAAE,iBAAiB,CAAC,MAAM;KAC5C;CACF,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ConfigValidationError, NgDevConfig} from '../utils/config.js';\n\n/** Configuration for commit-message comands. */\nexport interface CommitMessageConfig {\n  maxLineLength: number;\n  minBodyLength: number;\n  minBodyLengthTypeExcludes?: string[];\n  scopes: string[];\n  disallowFixup?: boolean;\n}\n\n/** Assert the provided config contains a `CommitMessageConfig`. */\nexport function assertValidCommitMessageConfig<T extends NgDevConfig>(\n  config: T & Partial<{commitMessage: CommitMessageConfig}>,\n): asserts config is T & {commitMessage: CommitMessageConfig} {\n  if (config.commitMessage === undefined) {\n    throw new ConfigValidationError(`No configuration defined for \"commitMessage\"`);\n  }\n}\n\n/** Scope requirement level to be set for each commit type. */\nexport enum ScopeRequirement {\n  Required,\n  Optional,\n  Forbidden,\n}\n\nexport enum ReleaseNotesLevel {\n  Hidden,\n  Visible,\n}\n\n/** A commit type */\nexport interface CommitType {\n  description: string;\n  name: string;\n  scope: ScopeRequirement;\n  releaseNotesLevel: ReleaseNotesLevel;\n}\n\n/** The valid commit types for Angular commit messages. */\nexport const COMMIT_TYPES: {[key: string]: CommitType} = {\n  build: {\n    name: 'build',\n    description: 'Changes to local repository build system and tooling',\n    scope: ScopeRequirement.Optional,\n    releaseNotesLevel: ReleaseNotesLevel.Hidden,\n  },\n  ci: {\n    name: 'ci',\n    description: 'Changes to CI configuration and CI specific tooling',\n    scope: ScopeRequirement.Forbidden,\n    releaseNotesLevel: ReleaseNotesLevel.Hidden,\n  },\n  docs: {\n    name: 'docs',\n    description: 'Changes which exclusively affects documentation.',\n    scope: ScopeRequirement.Optional,\n    releaseNotesLevel: ReleaseNotesLevel.Hidden,\n  },\n  feat: {\n    name: 'feat',\n    description: 'Creates a new feature',\n    scope: ScopeRequirement.Required,\n    releaseNotesLevel: ReleaseNotesLevel.Visible,\n  },\n  fix: {\n    name: 'fix',\n    description: 'Fixes a previously discovered failure/bug',\n    scope: ScopeRequirement.Required,\n    releaseNotesLevel: ReleaseNotesLevel.Visible,\n  },\n  perf: {\n    name: 'perf',\n    description: 'Improves performance without any change in functionality or API',\n    scope: ScopeRequirement.Required,\n    releaseNotesLevel: ReleaseNotesLevel.Visible,\n  },\n  refactor: {\n    name: 'refactor',\n    description: 'Refactor without any change in functionality or API (includes style changes)',\n    scope: ScopeRequirement.Optional,\n    releaseNotesLevel: ReleaseNotesLevel.Hidden,\n  },\n  release: {\n    name: 'release',\n    description: 'A release point in the repository',\n    scope: ScopeRequirement.Forbidden,\n    releaseNotesLevel: ReleaseNotesLevel.Hidden,\n  },\n  test: {\n    name: 'test',\n    description: \"Improvements or corrections made to the project's test suite\",\n    scope: ScopeRequirement.Optional,\n    releaseNotesLevel: ReleaseNotesLevel.Hidden,\n  },\n};\n"]}