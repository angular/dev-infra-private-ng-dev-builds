{"version":3,"file":"utils.js","sourceRoot":"","sources":["utils.ts"],"names":[],"mappings":"AAOA,OAAO,UAAU,MAAM,iBAAiB,CAAC;AAEzC,OAAO,EAAmB,sBAAsB,EAAE,qBAAqB,EAAC,MAAM,YAAY,CAAC;AAK3F,MAAM,UAAU,iBAAiB,CAAC,IAAY,EAAE,KAAa,MAAM;IACjE,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QAErC,MAAM,OAAO,GAAuB,EAAE,CAAC;QAEvC,MAAM,YAAY,GAAG,UAAU,CAAC,EAAC,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,sBAAsB,EAAC,CAAC,CAAC;QAI5E,YAAY,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,MAAc,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACzF,YAAY,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,GAAU,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;QACtD,YAAY,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport gitCommits from 'git-raw-commits';\n\nimport {CommitFromGitLog, gitLogFormatForParsing, parseCommitFromGitLog} from './parse.js';\n\n/**\n * Find all commits within the given range and return an object describing those.\n */\nexport function getCommitsInRange(from: string, to: string = 'HEAD'): Promise<CommitFromGitLog[]> {\n  return new Promise((resolve, reject) => {\n    /** List of parsed commit objects. */\n    const commits: CommitFromGitLog[] = [];\n    /** Stream of raw git commit strings in the range provided. */\n    const commitStream = gitCommits({from, to, format: gitLogFormatForParsing});\n\n    // Accumulate the parsed commits for each commit from the Readable stream into an array, then\n    // resolve the promise with the array when the Readable stream ends.\n    commitStream.on('data', (commit: Buffer) => commits.push(parseCommitFromGitLog(commit)));\n    commitStream.on('error', (err: Error) => reject(err));\n    commitStream.on('end', () => resolve(commits));\n  });\n}\n"]}