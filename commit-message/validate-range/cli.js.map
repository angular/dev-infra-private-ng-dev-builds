{"version":3,"file":"cli.js","sourceRoot":"","sources":["cli.ts"],"names":[],"mappings":"AAUA,OAAO,EAAC,GAAG,EAAC,MAAM,wBAAwB,CAAC;AAE3C,OAAO,EAAC,mBAAmB,EAAC,MAAM,qBAAqB,CAAC;AAQxD,SAAS,OAAO,CAAC,IAAU;IACzB,OAAO,IAAI;SACR,UAAU,CAAC,aAAa,EAAE;QACzB,WAAW,EAAE,sCAAsC;QACnD,IAAI,EAAE,QAAQ;QACd,YAAY,EAAE,IAAI;KACnB,CAAC;SACD,UAAU,CAAC,WAAW,EAAE;QACvB,WAAW,EAAE,qCAAqC;QAClD,IAAI,EAAE,QAAQ;QACd,OAAO,EAAE,MAAM;KAChB,CAAC,CAAC;AACP,CAAC;AAGD,KAAK,UAAU,OAAO,CAAC,EAAC,WAAW,EAAE,SAAS,EAAkC;IAG9E,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,KAAK,OAAO,EAAE,CAAC;QACpE,GAAG,CAAC,IAAI,CAAC,yEAAyE,CAAC,CAAC;QACpF,GAAG,CAAC,IAAI,CAAC,mEAAmE,CAAC,CAAC;QAC9E,GAAG,CAAC,IAAI,EAAE,CAAC;QACX,GAAG,CAAC,IAAI,CAAC,yCAAyC,CAAC,CAAC;QACpD,OAAO;IACT,CAAC;IACD,MAAM,mBAAmB,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AACpD,CAAC;AAGD,MAAM,CAAC,MAAM,mBAAmB,GAA4C;IAC1E,OAAO;IACP,OAAO;IACP,OAAO,EAAE,4CAA4C;IACrD,QAAQ,EAAE,qCAAqC;CAChD,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Argv, Arguments, CommandModule} from 'yargs';\n\nimport {Log} from '../../utils/logging.js';\n\nimport {validateCommitRange} from './validate-range.js';\n\nexport interface ValidateRangeOptions {\n  startingRef: string;\n  endingRef: string;\n}\n\n/** Builds the command. */\nfunction builder(argv: Argv) {\n  return argv\n    .positional('startingRef', {\n      description: 'The first ref in the range to select',\n      type: 'string',\n      demandOption: true,\n    })\n    .positional('endingRef', {\n      description: 'The last ref in the range to select',\n      type: 'string',\n      default: 'HEAD',\n    });\n}\n\n/** Handles the command. */\nasync function handler({startingRef, endingRef}: Arguments<ValidateRangeOptions>) {\n  // If on CI, and no pull request number is provided, assume the branch\n  // being run on is an upstream branch.\n  if (process.env['CI'] && process.env['CI_PULL_REQUEST'] === 'false') {\n    Log.info(`Since valid commit messages are enforced by PR linting on CI, we do not`);\n    Log.info(`need to validate commit messages on CI runs on upstream branches.`);\n    Log.info();\n    Log.info(`Skipping check of provided commit range`);\n    return;\n  }\n  await validateCommitRange(startingRef, endingRef);\n}\n\n/** yargs command module describing the command. */\nexport const ValidateRangeModule: CommandModule<{}, ValidateRangeOptions> = {\n  handler,\n  builder,\n  command: 'validate-range <starting-ref> [ending-ref]',\n  describe: 'Validate a range of commit messages',\n};\n"]}