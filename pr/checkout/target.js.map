{"version":3,"file":"target.js","sourceRoot":"","sources":["target.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ActiveReleaseTrains} from '../../release/versioning/active-release-trains.js';\nimport {getNextBranchName} from '../../release/versioning/version-branches.js';\nimport {AuthenticatedGitClient} from '../../utils/git/authenticated-git-client.js';\nimport {addTokenToGitHttpsUrl} from '../../utils/git/github-urls.js';\nimport {green, Log, yellow} from '../../utils/logging.js';\nimport {checkOutPullRequestLocally} from '../common/checkout-pr.js';\n\nexport async function checkoutToTargetBranch(\n  prNumber: number,\n  target: string,\n  {pullRequest}: Awaited<ReturnType<typeof checkOutPullRequestLocally>>,\n) {\n  /** An authenticated git client. */\n  const git = await AuthenticatedGitClient.get();\n  const config = git.config;\n\n  const branchName = `pr-${target.toLowerCase().replaceAll(/[\\W_]/gm, '-')}-${prNumber}`;\n  const {owner, name: repo} = config.github;\n  const activeReleaseTrains = await ActiveReleaseTrains.fetch({\n    name: repo,\n    owner: owner,\n    nextBranchName: getNextBranchName(config.github),\n    api: git.github,\n  });\n\n  let targetBranch = target;\n  let targetName = target;\n\n  if (\n    target === 'patch' ||\n    target === 'latest' ||\n    activeReleaseTrains.latest.branchName === target\n  ) {\n    targetName = 'patch';\n    targetBranch = activeReleaseTrains.latest.branchName;\n  } else if (\n    target === 'main' ||\n    target === 'next' ||\n    target === 'minor' ||\n    activeReleaseTrains.next.branchName === target\n  ) {\n    targetName = 'main';\n    targetBranch = activeReleaseTrains.next.branchName;\n  } else if (\n    activeReleaseTrains.releaseCandidate &&\n    (target === 'rc' || activeReleaseTrains.releaseCandidate.branchName === target)\n  ) {\n    targetName = 'rc';\n    targetBranch = activeReleaseTrains.releaseCandidate.branchName;\n  }\n  Log.info(`Targeting '${targetBranch}' branch\\n`);\n\n  const baseRefUrl = addTokenToGitHttpsUrl(pullRequest.baseRef.repository.url, git.githubToken);\n\n  git.run(['checkout', '-q', targetBranch]);\n  git.run(['fetch', '-q', baseRefUrl, targetBranch, '--deepen=500']);\n  git.run(['checkout', '-b', branchName]);\n\n  Log.info(`Running cherry-pick`);\n\n  try {\n    const revisionRange = `${pullRequest.baseRefOid}..${pullRequest.headRefOid}`;\n    git.run(['cherry-pick', revisionRange]);\n    Log.info(\n      ` ${green('✔')} Cherry-pick is complete. You can now push to create a new pull request.`,\n    );\n  } catch {\n    Log.info(\n      ` ${yellow('⚠')} Cherry-pick resulted in conflicts. Please resolve them manually and push to create your patch PR`,\n    );\n  }\n}\n"]}