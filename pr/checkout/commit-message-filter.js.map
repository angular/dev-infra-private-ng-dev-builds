{"version":3,"file":"commit-message-filter.js","sourceRoot":"","sources":["commit-message-filter.ts"],"names":[],"mappings":";;AAgBA,IAAI,EAAE,CAAC;AAEP,SAAS,IAAI;IACX,MAAM,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACzC,IAAI,CAAC,QAAQ,EAAE,CAAC;QACd,OAAO,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;QACnD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC;IAED,IAAI,aAAa,GAAG,EAAE,CAAC;IACvB,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAClC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,EAAE,GAAG,EAAE;QAChC,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QACnC,IAAI,KAAK,KAAK,IAAI,EAAE,CAAC;YACnB,aAAa,IAAI,KAAK,CAAC;QACzB,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE;QAC3B,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,CAAC;AACL,CAAC;AAED,SAAS,oBAAoB,CAAC,OAAe,EAAE,QAAgB;IAC7D,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAClC,KAAK,CAAC,IAAI,CAAC,WAAW,QAAQ,mBAAmB,CAAC,CAAC;IACnD,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC1B,CAAC","sourcesContent":["#!/usr/bin/env node\n\n/**\n * @license\n * Copyright Google LLC\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Script that can be passed as commit message filter to `git filter-branch --msg-filter`.\n * The script rewrites commit messages to contain a Github instruction to close the\n * corresponding pull request. For more details. See: https://git.io/Jv64r.\n */\n\nmain();\n\nfunction main() {\n  const [prNumber] = process.argv.slice(2);\n  if (!prNumber) {\n    console.error('No pull request number specified.');\n    process.exit(1);\n  }\n\n  let commitMessage = '';\n  process.stdin.setEncoding('utf8');\n  process.stdin.on('readable', () => {\n    const chunk = process.stdin.read();\n    if (chunk !== null) {\n      commitMessage += chunk;\n    }\n  });\n\n  process.stdin.on('end', () => {\n    console.info(rewriteCommitMessage(commitMessage, prNumber));\n  });\n}\n\nfunction rewriteCommitMessage(message: string, prNumber: string) {\n  const lines = message.split(/\\n/);\n  lines.push(`Closes #${prNumber} as a pr takeover`);\n  return lines.join('\\n');\n}\n"]}