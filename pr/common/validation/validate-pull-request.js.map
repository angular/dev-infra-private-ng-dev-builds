{"version":3,"file":"validate-pull-request.js","sourceRoot":"","sources":["validate-pull-request.ts"],"names":[],"mappings":"AAQA,OAAO,EAAC,kBAAkB,EAAC,MAAM,kCAAkC,CAAC;AAMpE,OAAO,EAAC,oCAAoC,EAAC,MAAM,kCAAkC,CAAC;AACtF,OAAO,EAAC,4BAA4B,EAAC,MAAM,kCAAkC,CAAC;AAC9E,OAAO,EAAC,0BAA0B,EAAC,MAAM,+BAA+B,CAAC;AACzE,OAAO,EAAC,+BAA+B,EAAC,MAAM,qCAAqC,CAAC;AACpF,OAAO,EAAC,0BAA0B,EAAC,MAAM,+BAA+B,CAAC;AACzE,OAAO,EAAC,uBAAuB,EAAC,MAAM,4BAA4B,CAAC;AACnE,OAAO,EAAC,oBAAoB,EAAC,MAAM,yBAAyB,CAAC;AAC7D,OAAO,EAAC,wBAAwB,EAAC,MAAM,6BAA6B,CAAC;AACrE,OAAO,EAAC,mBAAmB,EAAC,MAAM,wBAAwB,CAAC;AAC3D,OAAO,EAAC,sBAAsB,EAAC,MAAM,qBAAqB,CAAC;AAC3D,OAAO,EAAC,mBAAmB,EAAC,MAAM,wBAAwB,CAAC;AAU3D,MAAM,CAAC,KAAK,UAAU,sBAAsB,CAC1C,WAAkC,EAClC,gBAA6C,EAC7C,WAGE,EACF,mBAA+C,EAC/C,MAAyB,EACzB,SAAiC;IAEjC,MAAM,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAC3D,MAAM,WAAW,GAAG,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE;QACtD,OAAO,kBAAkB,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,MAAM,iBAAiB,GAAG;QACxB,wBAAwB,CAAC,GAAG,CAAC,gBAAgB,EAAE,WAAW,CAAC;QAC3D,0BAA0B,CAAC,GAAG,CAAC,gBAAgB,EAAE,WAAW,CAAC;QAC7D,oBAAoB,CAAC,GAAG,CAAC,gBAAgB,EAAE,WAAW,CAAC;QACvD,mBAAmB,CAAC,GAAG,CAAC,gBAAgB,EAAE,WAAW,CAAC;QACtD,sBAAsB,CAAC,GAAG,CAAC,gBAAgB,EAAE,WAAW,CAAC;QACzD,4BAA4B,CAAC,GAAG,CAAC,gBAAgB,EAAE,WAAW,EAAE,MAAM,CAAC;QACvE,mBAAmB,CAAC,GAAG,CAAC,gBAAgB,EAAE,WAAW,CAAC;QACtD,0BAA0B,CAAC,GAAG,CAAC,gBAAgB,EAAE,WAAW,EAAE,WAAW,CAAC,WAAW,CAAC;QACtF,+BAA+B,CAAC,GAAG,CACjC,gBAAgB,EAChB,WAAW,EACX,WAAW,CAAC,MAAM,EAClB,SAAS,CACV;QACD,uBAAuB,CAAC,GAAG,CAAC,gBAAgB,EAAE,WAAW,EAAE,SAAS,CAAC;KACtE,CAAC;IAEF,IAAI,mBAAmB,KAAK,IAAI,EAAE,CAAC;QACjC,iBAAiB,CAAC,IAAI,CACpB,oCAAoC,CAAC,GAAG,CACtC,gBAAgB,EAChB,WAAW,EACX,MAAM,CAAC,KAAK,EACZ,WAAW,CAAC,WAAW,EACvB,mBAAmB,EACnB,MAAM,EACN,WAAW,CACZ,CACF,CAAC;IACJ,CAAC;IAED,OAAO,MAAM,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE;QAC3D,OAAO,OAAO,CAAC,MAAM,CACsE,CACvF,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,KAAK,IAAI,CAAC,CAC9B,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {parseCommitMessage} from '../../../commit-message/parse.js';\nimport {ActiveReleaseTrains} from '../../../release/versioning/active-release-trains.js';\nimport {NgDevConfig, GithubConfig} from '../../../utils/config.js';\nimport {PullRequestConfig, PullRequestValidationConfig} from '../../config/index.js';\nimport {PullRequestFromGithub} from '../fetch-pull-request.js';\nimport {PullRequestTarget} from '../targeting/target-label.js';\nimport {changesAllowForTargetLabelValidation} from './assert-allowed-target-label.js';\nimport {breakingChangeInfoValidation} from './assert-breaking-change-info.js';\nimport {completedReviewsValidation} from './assert-completed-reviews.js';\nimport {isolatedSeparateFilesValidation} from './assert-isolated-separate-files.js';\nimport {enforcedStatusesValidation} from './assert-enforced-statuses.js';\nimport {enforceTestedValidation} from './assert-enforce-tested.js';\nimport {mergeReadyValidation} from './assert-merge-ready.js';\nimport {minimumReviewsValidation} from './assert-minimum-reviews.js';\nimport {passingCiValidation} from './assert-passing-ci.js';\nimport {pendingStateValidation} from './assert-pending.js';\nimport {signedClaValidation} from './assert-signed-cla.js';\nimport {PullRequestValidationFailure} from './validation-failure.js';\nimport {AuthenticatedGitClient} from '../../../utils/git/authenticated-git-client.js';\n\n/**\n * Runs all valiations that the given pull request is valid, returning a list of all failing\n * validations.\n *\n * Active release trains may be available for additional checks or not.\n */\nexport async function assertValidPullRequest(\n  pullRequest: PullRequestFromGithub,\n  validationConfig: PullRequestValidationConfig,\n  ngDevConfig: NgDevConfig<{\n    pullRequest: PullRequestConfig;\n    github: GithubConfig;\n  }>,\n  activeReleaseTrains: ActiveReleaseTrains | null,\n  target: PullRequestTarget,\n  gitClient: AuthenticatedGitClient,\n): Promise<PullRequestValidationFailure[]> {\n  const labels = pullRequest.labels.nodes.map((l) => l.name);\n  const commitsInPr = pullRequest.commits.nodes.map((n) => {\n    return parseCommitMessage(n.commit.message);\n  });\n\n  const validationResults = [\n    minimumReviewsValidation.run(validationConfig, pullRequest),\n    completedReviewsValidation.run(validationConfig, pullRequest),\n    mergeReadyValidation.run(validationConfig, pullRequest),\n    signedClaValidation.run(validationConfig, pullRequest),\n    pendingStateValidation.run(validationConfig, pullRequest),\n    breakingChangeInfoValidation.run(validationConfig, commitsInPr, labels),\n    passingCiValidation.run(validationConfig, pullRequest),\n    enforcedStatusesValidation.run(validationConfig, pullRequest, ngDevConfig.pullRequest),\n    isolatedSeparateFilesValidation.run(\n      validationConfig,\n      ngDevConfig,\n      pullRequest.number,\n      gitClient,\n    ),\n    enforceTestedValidation.run(validationConfig, pullRequest, gitClient),\n  ];\n\n  if (activeReleaseTrains !== null) {\n    validationResults.push(\n      changesAllowForTargetLabelValidation.run(\n        validationConfig,\n        commitsInPr,\n        target.label,\n        ngDevConfig.pullRequest,\n        activeReleaseTrains,\n        labels,\n        pullRequest,\n      ),\n    );\n  }\n\n  return await Promise.all(validationResults).then((results) => {\n    return results.filter(\n      <(result: null | PullRequestValidationFailure) => result is PullRequestValidationFailure>(\n        ((result) => result !== null)\n      ),\n    );\n  });\n}\n"]}