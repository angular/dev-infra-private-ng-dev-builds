{"version":3,"file":"assert-enforced-statuses.js","sourceRoot":"","sources":["assert-enforced-statuses.ts"],"names":[],"mappings":"AASA,OAAO,EAAC,yBAAyB,EAAwB,MAAM,0BAA0B,CAAC;AAC1F,OAAO,EAAC,2BAA2B,EAAE,qBAAqB,EAAC,MAAM,wBAAwB,CAAC;AAI1F,MAAM,CAAC,MAAM,0BAA0B,GAAG,2BAA2B,CACnE,EAAC,IAAI,EAAE,wBAAwB,EAAE,iBAAiB,EAAE,IAAI,EAAC,EACzD,GAAG,EAAE,CAAC,UAAU,CACjB,CAAC;AAEF,MAAM,UAAW,SAAQ,qBAAqB;IAC5C,MAAM,CAAC,WAAkC,EAAE,MAAyB;QAClE,IAAI,MAAM,CAAC,gBAAgB,KAAK,SAAS,EAAE,CAAC;YAC1C,OAAO;QACT,CAAC;QAED,MAAM,EAAC,QAAQ,EAAC,GAAG,yBAAyB,CAAC,WAAW,CAAC,CAAC;QAC1D,MAAM,OAAO,GAAa,EAAE,CAAC;QAE7B,KAAK,MAAM,QAAQ,IAAI,MAAM,CAAC,gBAAgB,EAAE,CAAC;YAC/C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;gBAChF,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC9B,CAAC;QACH,CAAC;QAED,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACvB,MAAM,IAAI,CAAC,YAAY,CACrB,sDAAsD,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAC7E,CAAC;QACJ,CAAC;IACH,CAAC;CACF","sourcesContent":["/**\n * @license\n * Copyright Google LLC\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PullRequestConfig} from '../../config/index.js';\nimport {getStatusesForPullRequest, PullRequestFromGithub} from '../fetch-pull-request.js';\nimport {createPullRequestValidation, PullRequestValidation} from './validation-config.js';\n\n/** Assert the pull request has passing enforced statuses. */\n// TODO: update typings to make sure portability is properly handled for windows build.\nexport const enforcedStatusesValidation = createPullRequestValidation(\n  {name: 'assertEnforcedStatuses', canBeForceIgnored: true},\n  () => Validation,\n);\n\nclass Validation extends PullRequestValidation {\n  assert(pullRequest: PullRequestFromGithub, config: PullRequestConfig) {\n    if (config.requiredStatuses === undefined) {\n      return;\n    }\n\n    const {statuses} = getStatusesForPullRequest(pullRequest);\n    const missing: string[] = [];\n\n    for (const enforced of config.requiredStatuses) {\n      if (!statuses.some((s) => s.name === enforced.name && s.type === enforced.type)) {\n        missing.push(enforced.name);\n      }\n    }\n\n    if (missing.length > 0) {\n      throw this._createError(\n        `Required statuses are missing on the pull request (${missing.join(', ')}).`,\n      );\n    }\n  }\n}\n"]}