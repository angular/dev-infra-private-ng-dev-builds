{"version":3,"file":"assert-isolated-separate-files.js","sourceRoot":"","sources":["assert-isolated-separate-files.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Minimatch} from 'minimatch';\nimport path from 'path';\nimport {\n  CaretakerConfig,\n  GithubConfig,\n  GoogleSyncConfig,\n  NgDevConfig,\n  assertValidCaretakerConfig,\n} from '../../../utils/config.js';\nimport {SyncFileMatchFn, getGoogleSyncConfig} from '../../../utils/g3-sync-config.js';\nimport {G3StatsData, G3Stats} from '../../../utils/g3.js';\nimport {createPullRequestValidation, PullRequestValidation} from './validation-config.js';\nimport {AuthenticatedGitClient} from '../../../utils/git/authenticated-git-client.js';\nimport {fetchPullRequestFilesFromGithub} from '../fetch-pull-request.js';\n\n/** Assert the pull request has passing enforced statuses. */\n// TODO: update typings to make sure portability is properly handled for windows build.\nexport const isolatedSeparateFilesValidation = createPullRequestValidation(\n  {name: 'assertIsolatedSeparateFiles', canBeForceIgnored: true},\n  () => Validation,\n);\n\nclass Validation extends PullRequestValidation {\n  async assert(\n    config: NgDevConfig<{\n      github: GithubConfig;\n    }>,\n    prNumber: number,\n    gitClient: AuthenticatedGitClient,\n  ) {\n    try {\n      assertValidCaretakerConfig(config);\n    } catch {\n      throw this._createError('No Caretaker Config was found.');\n    }\n\n    const g3SyncConfigWithMatchers = await getGsyncConfig(config.caretaker, gitClient);\n    if (g3SyncConfigWithMatchers === null) {\n      return;\n    }\n\n    // diffStats tells you what's already been merged in github, but hasn't yet been synced to G3\n    const diffStats = await getDiffStats(config, g3SyncConfigWithMatchers.config, gitClient);\n    if (diffStats === undefined) {\n      return;\n    }\n\n    const hasSeparateSyncFiles = await PullRequestFiles.create(\n      gitClient,\n      prNumber,\n      g3SyncConfigWithMatchers.config,\n    ).pullRequestHasSeparateFiles();\n\n    // This validation applies to PRs that get merged when changes have not yet been synced into G3.\n    // The rules are as follows:\n    //   1. if pure framework changes have been merged, separate file changes should not be merged.\n    //   2. if separate file changes have been merged, pure framework changes should not be merged.\n    //   3. if separate file changes have been merged, any change merged MUST have separate file changes in it.\n    //   4. framework changes can be merged with separate file changes as long as that change ALSO\n    //       has separate file changes also.\n\n    // covers 2 & 3\n    if (diffStats.separateFiles > 0 && !hasSeparateSyncFiles) {\n      throw this._createError(\n        `This PR cannot be merged as Shared Primitives code has already been merged. ` +\n          `Primitives and Framework code must be merged and synced separately. Try again after a g3sync has finished.`,\n      );\n    }\n\n    // covers 1 & 4\n    if (diffStats.files > 0 && diffStats.separateFiles === 0 && hasSeparateSyncFiles) {\n      throw this._createError(\n        `This PR cannot be merged as Angular framework code has already been merged. ` +\n          `Primitives and Framework code must be merged and synced separately. Try again after a g3sync has finished.`,\n      );\n    }\n  }\n}\n\nasync function getGsyncConfig(\n  config: CaretakerConfig,\n  git: AuthenticatedGitClient,\n): Promise<{\n  ngMatchFn: SyncFileMatchFn;\n  separateMatchFn: SyncFileMatchFn;\n  config: GoogleSyncConfig;\n} | null> {\n  let googleSyncConfig = null;\n  if (config.g3SyncConfigPath) {\n    try {\n      const configPath = path.join(git.baseDir, config.g3SyncConfigPath);\n      googleSyncConfig = await getGoogleSyncConfig(configPath);\n    } catch {}\n  }\n  return googleSyncConfig;\n}\n\nexport class PullRequestFiles {\n  constructor(\n    private git: AuthenticatedGitClient,\n    private prNumber: number,\n    private config: GoogleSyncConfig,\n  ) {}\n  /**\n   * Loads the files from a given pull request.\n   */\n  async loadPullRequestFiles(): Promise<string[]> {\n    const files = await fetchPullRequestFilesFromGithub(this.git, this.prNumber);\n    return files?.map((x) => x.path) ?? [];\n  }\n\n  /**\n   * checks for separate files against the pull request files\n   */\n  async pullRequestHasSeparateFiles(): Promise<boolean> {\n    const pullRequestFiles = await this.loadPullRequestFiles();\n    const separateFilePatterns = this.config.separateFilePatterns.map((p) => new Minimatch(p));\n    for (let path of pullRequestFiles) {\n      if (separateFilePatterns.some((p) => p.match(path))) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static create(git: AuthenticatedGitClient, prNumber: number, config: GoogleSyncConfig) {\n    return new PullRequestFiles(git, prNumber, config);\n  }\n}\n\nasync function getDiffStats(\n  ngDevConfig: NgDevConfig<{\n    github: GithubConfig;\n    caretaker: CaretakerConfig;\n  }>,\n  googleSyncConfig: GoogleSyncConfig,\n  git: AuthenticatedGitClient,\n): Promise<G3StatsData | undefined> {\n  if (googleSyncConfig && googleSyncConfig.separateFilePatterns.length > 0) {\n    return G3Stats.retrieveDiffStats(git, {\n      caretaker: ngDevConfig.caretaker,\n      github: ngDevConfig.github,\n    });\n  }\n  return;\n}\n"]}