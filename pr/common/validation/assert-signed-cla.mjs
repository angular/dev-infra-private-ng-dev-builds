/**
 * @license
 * Copyright Google LLC
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { getStatusesForPullRequest, PullRequestStatus, } from '../fetch-pull-request.js';
import { createPullRequestValidation, PullRequestValidation } from './validation-config.js';
/** Assert the pull request has a signed CLA. */
// TODO: update typings to make sure portability is properly handled for windows build.
export const signedClaValidation = createPullRequestValidation(
// CLA check can be force-ignored but the caretaker needs to make sure
// the target pull requests has a signed CLA or is authored by another Googler.
{ name: 'assertSignedCla', canBeForceIgnored: true }, () => Validation);
class Validation extends PullRequestValidation {
    assert(pullRequest) {
        const passing = getStatusesForPullRequest(pullRequest).statuses.some(({ name, status }) => {
            return name === 'cla/google' && status === PullRequestStatus.PASSING;
        });
        if (!passing) {
            throw this._createError('CLA is not signed by the contributor.');
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzZXJ0LXNpZ25lZC1jbGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9uZy1kZXYvcHIvY29tbW9uL3ZhbGlkYXRpb24vYXNzZXJ0LXNpZ25lZC1jbGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUgsT0FBTyxFQUNMLHlCQUF5QixFQUV6QixpQkFBaUIsR0FDbEIsTUFBTSwwQkFBMEIsQ0FBQztBQUNsQyxPQUFPLEVBQUMsMkJBQTJCLEVBQUUscUJBQXFCLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQUUxRixnREFBZ0Q7QUFDaEQsdUZBQXVGO0FBQ3ZGLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLDJCQUEyQjtBQUM1RCxzRUFBc0U7QUFDdEUsK0VBQStFO0FBQy9FLEVBQUMsSUFBSSxFQUFFLGlCQUFpQixFQUFFLGlCQUFpQixFQUFFLElBQUksRUFBQyxFQUNsRCxHQUFHLEVBQUUsQ0FBQyxVQUFVLENBQ2pCLENBQUM7QUFFRixNQUFNLFVBQVcsU0FBUSxxQkFBcUI7SUFDNUMsTUFBTSxDQUFDLFdBQWtDO1FBQ3ZDLE1BQU0sT0FBTyxHQUFHLHlCQUF5QixDQUFDLFdBQVcsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFDLElBQUksRUFBRSxNQUFNLEVBQUMsRUFBRSxFQUFFO1lBQ3RGLE9BQU8sSUFBSSxLQUFLLFlBQVksSUFBSSxNQUFNLEtBQUssaUJBQWlCLENBQUMsT0FBTyxDQUFDO1FBQ3ZFLENBQUMsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBQ2IsTUFBTSxJQUFJLENBQUMsWUFBWSxDQUFDLHVDQUF1QyxDQUFDLENBQUM7UUFDbkUsQ0FBQztJQUNILENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuXG5pbXBvcnQge1xuICBnZXRTdGF0dXNlc0ZvclB1bGxSZXF1ZXN0LFxuICBQdWxsUmVxdWVzdEZyb21HaXRodWIsXG4gIFB1bGxSZXF1ZXN0U3RhdHVzLFxufSBmcm9tICcuLi9mZXRjaC1wdWxsLXJlcXVlc3QuanMnO1xuaW1wb3J0IHtjcmVhdGVQdWxsUmVxdWVzdFZhbGlkYXRpb24sIFB1bGxSZXF1ZXN0VmFsaWRhdGlvbn0gZnJvbSAnLi92YWxpZGF0aW9uLWNvbmZpZy5qcyc7XG5cbi8qKiBBc3NlcnQgdGhlIHB1bGwgcmVxdWVzdCBoYXMgYSBzaWduZWQgQ0xBLiAqL1xuLy8gVE9ETzogdXBkYXRlIHR5cGluZ3MgdG8gbWFrZSBzdXJlIHBvcnRhYmlsaXR5IGlzIHByb3Blcmx5IGhhbmRsZWQgZm9yIHdpbmRvd3MgYnVpbGQuXG5leHBvcnQgY29uc3Qgc2lnbmVkQ2xhVmFsaWRhdGlvbiA9IGNyZWF0ZVB1bGxSZXF1ZXN0VmFsaWRhdGlvbihcbiAgLy8gQ0xBIGNoZWNrIGNhbiBiZSBmb3JjZS1pZ25vcmVkIGJ1dCB0aGUgY2FyZXRha2VyIG5lZWRzIHRvIG1ha2Ugc3VyZVxuICAvLyB0aGUgdGFyZ2V0IHB1bGwgcmVxdWVzdHMgaGFzIGEgc2lnbmVkIENMQSBvciBpcyBhdXRob3JlZCBieSBhbm90aGVyIEdvb2dsZXIuXG4gIHtuYW1lOiAnYXNzZXJ0U2lnbmVkQ2xhJywgY2FuQmVGb3JjZUlnbm9yZWQ6IHRydWV9LFxuICAoKSA9PiBWYWxpZGF0aW9uLFxuKTtcblxuY2xhc3MgVmFsaWRhdGlvbiBleHRlbmRzIFB1bGxSZXF1ZXN0VmFsaWRhdGlvbiB7XG4gIGFzc2VydChwdWxsUmVxdWVzdDogUHVsbFJlcXVlc3RGcm9tR2l0aHViKSB7XG4gICAgY29uc3QgcGFzc2luZyA9IGdldFN0YXR1c2VzRm9yUHVsbFJlcXVlc3QocHVsbFJlcXVlc3QpLnN0YXR1c2VzLnNvbWUoKHtuYW1lLCBzdGF0dXN9KSA9PiB7XG4gICAgICByZXR1cm4gbmFtZSA9PT0gJ2NsYS9nb29nbGUnICYmIHN0YXR1cyA9PT0gUHVsbFJlcXVlc3RTdGF0dXMuUEFTU0lORztcbiAgICB9KTtcblxuICAgIGlmICghcGFzc2luZykge1xuICAgICAgdGhyb3cgdGhpcy5fY3JlYXRlRXJyb3IoJ0NMQSBpcyBub3Qgc2lnbmVkIGJ5IHRoZSBjb250cmlidXRvci4nKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==