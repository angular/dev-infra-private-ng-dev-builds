{"version":3,"file":"assert-breaking-change-info.js","sourceRoot":"","sources":["assert-breaking-change-info.ts"],"names":[],"mappings":"AASA,OAAO,EAAC,aAAa,EAAC,MAAM,oBAAoB,CAAC;AACjD,OAAO,EAAC,2BAA2B,EAAE,qBAAqB,EAAC,MAAM,wBAAwB,CAAC;AAI1F,MAAM,CAAC,MAAM,4BAA4B,GAAG,2BAA2B,CACrE,EAAC,IAAI,EAAE,eAAe,EAAE,iBAAiB,EAAE,KAAK,EAAC,EACjD,GAAG,EAAE,CAAC,UAAU,CACjB,CAAC;AAEF,MAAM,UAAW,SAAQ,qBAAqB;IAC5C,MAAM,CAAC,OAAiB,EAAE,MAAgB;QAExC,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,0BAA0B,CAAC,CAAC,IAAI,CAAC,CAAC;QAEjF,MAAM,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;QAEhF,IAAI,CAAC,QAAQ,IAAI,SAAS,EAAE,CAAC;YAC3B,MAAM,IAAI,CAAC,sCAAsC,EAAE,CAAC;QACtD,CAAC;QAED,IAAI,QAAQ,IAAI,CAAC,SAAS,EAAE,CAAC;YAC3B,MAAM,IAAI,CAAC,uCAAuC,EAAE,CAAC;QACvD,CAAC;IACH,CAAC;IAEO,sCAAsC;QAC5C,MAAM,OAAO,GACX,0EAA0E;YAC1E,oEAAoE;YACpE,oBAAoB,aAAa,CAAC,0BAA0B,CAAC,CAAC,IAAI,EAAE,CAAC;QACvE,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;IACpC,CAAC;IAEO,uCAAuC;QAC7C,MAAM,OAAO,GACX,kFAAkF;YAClF,qFAAqF,CAAC;QACxF,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;IACpC,CAAC;CACF","sourcesContent":["/**\n * @license\n * Copyright Google LLC\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Commit} from '../../../commit-message/parse.js';\nimport {managedLabels} from '../labels/index.js';\nimport {createPullRequestValidation, PullRequestValidation} from './validation-config.js';\n\n/** Assert the pull request is properly denoted if it contains breaking changes. */\n// TODO: update typings to make sure portability is properly handled for windows build.\nexport const breakingChangeInfoValidation = createPullRequestValidation(\n  {name: 'assertPending', canBeForceIgnored: false},\n  () => Validation,\n);\n\nclass Validation extends PullRequestValidation {\n  assert(commits: Commit[], labels: string[]) {\n    // Whether the PR has a label noting a breaking change.\n    const hasLabel = labels.includes(managedLabels['DETECTED_BREAKING_CHANGE'].name);\n    // Whether the PR has at least one commit which notes a breaking change.\n    const hasCommit = commits.some((commit) => commit.breakingChanges.length !== 0);\n\n    if (!hasLabel && hasCommit) {\n      throw this._createMissingBreakingChangeLabelError();\n    }\n\n    if (hasLabel && !hasCommit) {\n      throw this._createMissingBreakingChangeCommitError();\n    }\n  }\n\n  private _createMissingBreakingChangeLabelError() {\n    const message =\n      `Pull Request has at least one commit containing a breaking change note, ` +\n      `but does not have a breaking change label. Make sure to apply the ` +\n      `following label: ${managedLabels['DETECTED_BREAKING_CHANGE'].name}`;\n    return this._createError(message);\n  }\n\n  private _createMissingBreakingChangeCommitError() {\n    const message =\n      'Pull Request has a breaking change label, but does not contain any commits with ' +\n      'breaking change notes (i.e. commits do not have a `BREAKING CHANGE: <..>` section).';\n    return this._createError(message);\n  }\n}\n"]}