{"version":3,"file":"merge.js","sourceRoot":"","sources":["merge.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,iBAAiB,EAAE,KAAK,EAAE,mBAAmB,EAAC,MAAM,WAAW,CAAC;AAExE,MAAM,UAAW,SAAQ,KAAK;CAAG;AAEjC,MAAM,CAAC,MAAM,WAAW,GAAG,iBAAiB,CAAC,UAAU,CAAC,CAAC;IACvD,sBAAsB,EAAE;QACtB,WAAW,EAAE,+DAA+D;QAC5E,IAAI,EAAE,yBAAyB;KAChC;IACD,oBAAoB,EAAE;QACpB,WAAW,EAAE,+DAA+D;QAC5E,IAAI,EAAE,uBAAuB;KAC9B;IACD,wBAAwB,EAAE;QACxB,WAAW,EAAE,0EAA0E;QACvF,IAAI,EAAE,2BAA2B;QACjC,YAAY,EAAE,CAAC,mBAAmB,CAAC,UAAU,EAAE,mBAAmB,CAAC,WAAW,CAAC;KAChF;IACD,oBAAoB,EAAE;QACpB,WAAW,EACT,qGAAqG;QACvG,IAAI,EAAE,uBAAuB;KAC9B;CACF,CAAC,CAAC","sourcesContent":["import {createTypedObject, Label, ManagedRepositories} from './base.js';\n\nclass MergeLabel extends Label {}\n\nexport const mergeLabels = createTypedObject(MergeLabel)({\n  MERGE_PRESERVE_COMMITS: {\n    description: 'When the PR is merged, a rebase and merge should be performed',\n    name: 'merge: preserve commits',\n  },\n  MERGE_SQUASH_COMMITS: {\n    description: 'When the PR is merged, a squash and merge should be performed',\n    name: 'merge: squash commits',\n  },\n  MERGE_FIX_COMMIT_MESSAGE: {\n    description: 'When the PR is merged, rewrites/fixups of the commit messages are needed',\n    name: 'merge: fix commit message',\n    repositories: [ManagedRepositories.COMPONENTS, ManagedRepositories.ANGULAR_CLI],\n  },\n  MERGE_CARETAKER_NOTE: {\n    description:\n      'Alert the caretaker performing the merge to check the PR for an out of normal action needed or note',\n    name: 'merge: caretaker note',\n  },\n});\n"]}