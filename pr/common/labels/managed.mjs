import { createTypedObject, Label, ManagedRepositories } from './base.js';
class ManagedLabel extends Label {
    constructor() {
        super(...arguments);
        /** A matching function, if the label is automatically applied by our github action, otherwise false. */
        this.commitCheck = this.params.commitCheck;
    }
}
export const managedLabels = createTypedObject(ManagedLabel)({
    DETECTED_BREAKING_CHANGE: {
        description: 'PR contains a commit with a breaking change',
        name: 'detected: breaking change',
        commitCheck: (c) => c.breakingChanges.length !== 0,
    },
    DETECTED_DEPRECATION: {
        description: 'PR contains a commit with a deprecation',
        name: 'detected: deprecation',
        commitCheck: (c) => c.deprecations.length !== 0,
    },
    DETECTED_FEATURE: {
        description: 'PR contains a feature commit',
        name: 'detected: feature',
        commitCheck: (c) => c.type === 'feat',
    },
    DETECTED_DOCS_CHANGE: {
        description: 'Related to the documentation',
        name: 'area: docs',
        commitCheck: (c) => c.type === 'docs',
    },
    DETECTED_INFRA_CHANGE: {
        description: 'Related the build and CI infrastructure of the project',
        name: 'area: build & ci',
        commitCheck: (c) => c.type === 'build' || c.type === 'ci',
    },
    DETECTED_PERF_CHANGE: {
        description: 'Issues related to performance',
        name: 'area: performance',
        commitCheck: (c) => c.type === 'perf',
    },
    // angular/angular specific labels.
    DETECTED_HTTP_CHANGE: {
        description: 'Issues related to HTTP and HTTP Client',
        name: 'area: common/http',
        commitCheck: (c) => c.scope === 'common/http' || c.scope === 'http',
        repositories: [ManagedRepositories.ANGULAR],
    },
    DETECTED_COMPILER_CHANGE: {
        description: "Issues related to `ngc`, Angular's template compiler",
        name: 'area: compiler',
        commitCheck: (c) => c.scope === 'compiler' || c.scope === 'compiler-cli',
        repositories: [ManagedRepositories.ANGULAR],
    },
    DETECTED_PLATFORM_BROWSER_CHANGE: {
        description: 'Issues related to the framework runtime',
        name: 'area: core',
        commitCheck: (c) => c.scope === 'platform-browser' ||
            c.scope === 'core' ||
            c.scope === 'platform-browser-dynamic',
        repositories: [ManagedRepositories.ANGULAR],
    },
    DETECTED_PLATFORM_SERVER_CHANGE: {
        description: 'Issues related to server-side rendering',
        name: 'area: server',
        commitCheck: (c) => c.scope === 'platform-server',
        repositories: [ManagedRepositories.ANGULAR],
    },
    DETECTED_ZONES_CHANGE: {
        description: 'Issues related to zone.js',
        name: 'area: zones',
        commitCheck: (c) => c.scope === 'zone.js',
        repositories: [ManagedRepositories.ANGULAR],
    },
    DETECTED_LOCALIZE_CHANGE: {
        description: 'Issues related to localization and internationalization',
        name: 'area: i18n',
        commitCheck: (c) => c.scope === 'localize',
        repositories: [ManagedRepositories.ANGULAR],
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFuYWdlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL25nLWRldi9wci9jb21tb24vbGFiZWxzL21hbmFnZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFDLGlCQUFpQixFQUFFLEtBQUssRUFBZSxtQkFBbUIsRUFBQyxNQUFNLFdBQVcsQ0FBQztBQU9yRixNQUFNLFlBQWEsU0FBUSxLQUF3QjtJQUFuRDs7UUFDRSx3R0FBd0c7UUFDeEcsZ0JBQVcsR0FBMkIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUM7SUFDaEUsQ0FBQztDQUFBO0FBRUQsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFHLGlCQUFpQixDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQzNELHdCQUF3QixFQUFFO1FBQ3hCLFdBQVcsRUFBRSw2Q0FBNkM7UUFDMUQsSUFBSSxFQUFFLDJCQUEyQjtRQUNqQyxXQUFXLEVBQUUsQ0FBQyxDQUFTLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxlQUFlLENBQUMsTUFBTSxLQUFLLENBQUM7S0FDM0Q7SUFDRCxvQkFBb0IsRUFBRTtRQUNwQixXQUFXLEVBQUUseUNBQXlDO1FBQ3RELElBQUksRUFBRSx1QkFBdUI7UUFDN0IsV0FBVyxFQUFFLENBQUMsQ0FBUyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLE1BQU0sS0FBSyxDQUFDO0tBQ3hEO0lBQ0QsZ0JBQWdCLEVBQUU7UUFDaEIsV0FBVyxFQUFFLDhCQUE4QjtRQUMzQyxJQUFJLEVBQUUsbUJBQW1CO1FBQ3pCLFdBQVcsRUFBRSxDQUFDLENBQVMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksS0FBSyxNQUFNO0tBQzlDO0lBQ0Qsb0JBQW9CLEVBQUU7UUFDcEIsV0FBVyxFQUFFLDhCQUE4QjtRQUMzQyxJQUFJLEVBQUUsWUFBWTtRQUNsQixXQUFXLEVBQUUsQ0FBQyxDQUFTLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLEtBQUssTUFBTTtLQUM5QztJQUNELHFCQUFxQixFQUFFO1FBQ3JCLFdBQVcsRUFBRSx3REFBd0Q7UUFDckUsSUFBSSxFQUFFLGtCQUFrQjtRQUN4QixXQUFXLEVBQUUsQ0FBQyxDQUFTLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLEtBQUssT0FBTyxJQUFJLENBQUMsQ0FBQyxJQUFJLEtBQUssSUFBSTtLQUNsRTtJQUNELG9CQUFvQixFQUFFO1FBQ3BCLFdBQVcsRUFBRSwrQkFBK0I7UUFDNUMsSUFBSSxFQUFFLG1CQUFtQjtRQUN6QixXQUFXLEVBQUUsQ0FBQyxDQUFTLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLEtBQUssTUFBTTtLQUM5QztJQUVELG1DQUFtQztJQUNuQyxvQkFBb0IsRUFBRTtRQUNwQixXQUFXLEVBQUUsd0NBQXdDO1FBQ3JELElBQUksRUFBRSxtQkFBbUI7UUFDekIsV0FBVyxFQUFFLENBQUMsQ0FBUyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxLQUFLLGFBQWEsSUFBSSxDQUFDLENBQUMsS0FBSyxLQUFLLE1BQU07UUFDM0UsWUFBWSxFQUFFLENBQUMsbUJBQW1CLENBQUMsT0FBTyxDQUFDO0tBQzVDO0lBQ0Qsd0JBQXdCLEVBQUU7UUFDeEIsV0FBVyxFQUFFLHNEQUFzRDtRQUNuRSxJQUFJLEVBQUUsZ0JBQWdCO1FBQ3RCLFdBQVcsRUFBRSxDQUFDLENBQVMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssS0FBSyxVQUFVLElBQUksQ0FBQyxDQUFDLEtBQUssS0FBSyxjQUFjO1FBQ2hGLFlBQVksRUFBRSxDQUFDLG1CQUFtQixDQUFDLE9BQU8sQ0FBQztLQUM1QztJQUNELGdDQUFnQyxFQUFFO1FBQ2hDLFdBQVcsRUFBRSx5Q0FBeUM7UUFDdEQsSUFBSSxFQUFFLFlBQVk7UUFDbEIsV0FBVyxFQUFFLENBQUMsQ0FBUyxFQUFFLEVBQUUsQ0FDekIsQ0FBQyxDQUFDLEtBQUssS0FBSyxrQkFBa0I7WUFDOUIsQ0FBQyxDQUFDLEtBQUssS0FBSyxNQUFNO1lBQ2xCLENBQUMsQ0FBQyxLQUFLLEtBQUssMEJBQTBCO1FBQ3hDLFlBQVksRUFBRSxDQUFDLG1CQUFtQixDQUFDLE9BQU8sQ0FBQztLQUM1QztJQUNELCtCQUErQixFQUFFO1FBQy9CLFdBQVcsRUFBRSx5Q0FBeUM7UUFDdEQsSUFBSSxFQUFFLGNBQWM7UUFDcEIsV0FBVyxFQUFFLENBQUMsQ0FBUyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxLQUFLLGlCQUFpQjtRQUN6RCxZQUFZLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQyxPQUFPLENBQUM7S0FDNUM7SUFDRCxxQkFBcUIsRUFBRTtRQUNyQixXQUFXLEVBQUUsMkJBQTJCO1FBQ3hDLElBQUksRUFBRSxhQUFhO1FBQ25CLFdBQVcsRUFBRSxDQUFDLENBQVMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssS0FBSyxTQUFTO1FBQ2pELFlBQVksRUFBRSxDQUFDLG1CQUFtQixDQUFDLE9BQU8sQ0FBQztLQUM1QztJQUNELHdCQUF3QixFQUFFO1FBQ3hCLFdBQVcsRUFBRSx5REFBeUQ7UUFDdEUsSUFBSSxFQUFFLFlBQVk7UUFDbEIsV0FBVyxFQUFFLENBQUMsQ0FBUyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxLQUFLLFVBQVU7UUFDbEQsWUFBWSxFQUFFLENBQUMsbUJBQW1CLENBQUMsT0FBTyxDQUFDO0tBQzVDO0NBQ0YsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21taXR9IGZyb20gJy4uLy4uLy4uL2NvbW1pdC1tZXNzYWdlL3BhcnNlLmpzJztcbmltcG9ydCB7Y3JlYXRlVHlwZWRPYmplY3QsIExhYmVsLCBMYWJlbFBhcmFtcywgTWFuYWdlZFJlcG9zaXRvcmllc30gZnJvbSAnLi9iYXNlLmpzJztcblxuZXhwb3J0IGludGVyZmFjZSBNYW5hZ2VMYWJlbFBhcmFtcyBleHRlbmRzIExhYmVsUGFyYW1zIHtcbiAgLyoqIEEgbWF0Y2hpbmcgZnVuY3Rpb24sIGlmIHRoZSBsYWJlbCBpcyBhdXRvbWF0aWNhbGx5IGFwcGxpZWQgYnkgb3VyIGdpdGh1YiBhY3Rpb24sIG90aGVyd2lzZSBmYWxzZS4gKi9cbiAgY29tbWl0Q2hlY2s6IChjOiBDb21taXQpID0+IGJvb2xlYW47XG59XG5cbmNsYXNzIE1hbmFnZWRMYWJlbCBleHRlbmRzIExhYmVsPE1hbmFnZUxhYmVsUGFyYW1zPiB7XG4gIC8qKiBBIG1hdGNoaW5nIGZ1bmN0aW9uLCBpZiB0aGUgbGFiZWwgaXMgYXV0b21hdGljYWxseSBhcHBsaWVkIGJ5IG91ciBnaXRodWIgYWN0aW9uLCBvdGhlcndpc2UgZmFsc2UuICovXG4gIGNvbW1pdENoZWNrOiAoYzogQ29tbWl0KSA9PiBib29sZWFuID0gdGhpcy5wYXJhbXMuY29tbWl0Q2hlY2s7XG59XG5cbmV4cG9ydCBjb25zdCBtYW5hZ2VkTGFiZWxzID0gY3JlYXRlVHlwZWRPYmplY3QoTWFuYWdlZExhYmVsKSh7XG4gIERFVEVDVEVEX0JSRUFLSU5HX0NIQU5HRToge1xuICAgIGRlc2NyaXB0aW9uOiAnUFIgY29udGFpbnMgYSBjb21taXQgd2l0aCBhIGJyZWFraW5nIGNoYW5nZScsXG4gICAgbmFtZTogJ2RldGVjdGVkOiBicmVha2luZyBjaGFuZ2UnLFxuICAgIGNvbW1pdENoZWNrOiAoYzogQ29tbWl0KSA9PiBjLmJyZWFraW5nQ2hhbmdlcy5sZW5ndGggIT09IDAsXG4gIH0sXG4gIERFVEVDVEVEX0RFUFJFQ0FUSU9OOiB7XG4gICAgZGVzY3JpcHRpb246ICdQUiBjb250YWlucyBhIGNvbW1pdCB3aXRoIGEgZGVwcmVjYXRpb24nLFxuICAgIG5hbWU6ICdkZXRlY3RlZDogZGVwcmVjYXRpb24nLFxuICAgIGNvbW1pdENoZWNrOiAoYzogQ29tbWl0KSA9PiBjLmRlcHJlY2F0aW9ucy5sZW5ndGggIT09IDAsXG4gIH0sXG4gIERFVEVDVEVEX0ZFQVRVUkU6IHtcbiAgICBkZXNjcmlwdGlvbjogJ1BSIGNvbnRhaW5zIGEgZmVhdHVyZSBjb21taXQnLFxuICAgIG5hbWU6ICdkZXRlY3RlZDogZmVhdHVyZScsXG4gICAgY29tbWl0Q2hlY2s6IChjOiBDb21taXQpID0+IGMudHlwZSA9PT0gJ2ZlYXQnLFxuICB9LFxuICBERVRFQ1RFRF9ET0NTX0NIQU5HRToge1xuICAgIGRlc2NyaXB0aW9uOiAnUmVsYXRlZCB0byB0aGUgZG9jdW1lbnRhdGlvbicsXG4gICAgbmFtZTogJ2FyZWE6IGRvY3MnLFxuICAgIGNvbW1pdENoZWNrOiAoYzogQ29tbWl0KSA9PiBjLnR5cGUgPT09ICdkb2NzJyxcbiAgfSxcbiAgREVURUNURURfSU5GUkFfQ0hBTkdFOiB7XG4gICAgZGVzY3JpcHRpb246ICdSZWxhdGVkIHRoZSBidWlsZCBhbmQgQ0kgaW5mcmFzdHJ1Y3R1cmUgb2YgdGhlIHByb2plY3QnLFxuICAgIG5hbWU6ICdhcmVhOiBidWlsZCAmIGNpJyxcbiAgICBjb21taXRDaGVjazogKGM6IENvbW1pdCkgPT4gYy50eXBlID09PSAnYnVpbGQnIHx8IGMudHlwZSA9PT0gJ2NpJyxcbiAgfSxcbiAgREVURUNURURfUEVSRl9DSEFOR0U6IHtcbiAgICBkZXNjcmlwdGlvbjogJ0lzc3VlcyByZWxhdGVkIHRvIHBlcmZvcm1hbmNlJyxcbiAgICBuYW1lOiAnYXJlYTogcGVyZm9ybWFuY2UnLFxuICAgIGNvbW1pdENoZWNrOiAoYzogQ29tbWl0KSA9PiBjLnR5cGUgPT09ICdwZXJmJyxcbiAgfSxcblxuICAvLyBhbmd1bGFyL2FuZ3VsYXIgc3BlY2lmaWMgbGFiZWxzLlxuICBERVRFQ1RFRF9IVFRQX0NIQU5HRToge1xuICAgIGRlc2NyaXB0aW9uOiAnSXNzdWVzIHJlbGF0ZWQgdG8gSFRUUCBhbmQgSFRUUCBDbGllbnQnLFxuICAgIG5hbWU6ICdhcmVhOiBjb21tb24vaHR0cCcsXG4gICAgY29tbWl0Q2hlY2s6IChjOiBDb21taXQpID0+IGMuc2NvcGUgPT09ICdjb21tb24vaHR0cCcgfHwgYy5zY29wZSA9PT0gJ2h0dHAnLFxuICAgIHJlcG9zaXRvcmllczogW01hbmFnZWRSZXBvc2l0b3JpZXMuQU5HVUxBUl0sXG4gIH0sXG4gIERFVEVDVEVEX0NPTVBJTEVSX0NIQU5HRToge1xuICAgIGRlc2NyaXB0aW9uOiBcIklzc3VlcyByZWxhdGVkIHRvIGBuZ2NgLCBBbmd1bGFyJ3MgdGVtcGxhdGUgY29tcGlsZXJcIixcbiAgICBuYW1lOiAnYXJlYTogY29tcGlsZXInLFxuICAgIGNvbW1pdENoZWNrOiAoYzogQ29tbWl0KSA9PiBjLnNjb3BlID09PSAnY29tcGlsZXInIHx8IGMuc2NvcGUgPT09ICdjb21waWxlci1jbGknLFxuICAgIHJlcG9zaXRvcmllczogW01hbmFnZWRSZXBvc2l0b3JpZXMuQU5HVUxBUl0sXG4gIH0sXG4gIERFVEVDVEVEX1BMQVRGT1JNX0JST1dTRVJfQ0hBTkdFOiB7XG4gICAgZGVzY3JpcHRpb246ICdJc3N1ZXMgcmVsYXRlZCB0byB0aGUgZnJhbWV3b3JrIHJ1bnRpbWUnLFxuICAgIG5hbWU6ICdhcmVhOiBjb3JlJyxcbiAgICBjb21taXRDaGVjazogKGM6IENvbW1pdCkgPT5cbiAgICAgIGMuc2NvcGUgPT09ICdwbGF0Zm9ybS1icm93c2VyJyB8fFxuICAgICAgYy5zY29wZSA9PT0gJ2NvcmUnIHx8XG4gICAgICBjLnNjb3BlID09PSAncGxhdGZvcm0tYnJvd3Nlci1keW5hbWljJyxcbiAgICByZXBvc2l0b3JpZXM6IFtNYW5hZ2VkUmVwb3NpdG9yaWVzLkFOR1VMQVJdLFxuICB9LFxuICBERVRFQ1RFRF9QTEFURk9STV9TRVJWRVJfQ0hBTkdFOiB7XG4gICAgZGVzY3JpcHRpb246ICdJc3N1ZXMgcmVsYXRlZCB0byBzZXJ2ZXItc2lkZSByZW5kZXJpbmcnLFxuICAgIG5hbWU6ICdhcmVhOiBzZXJ2ZXInLFxuICAgIGNvbW1pdENoZWNrOiAoYzogQ29tbWl0KSA9PiBjLnNjb3BlID09PSAncGxhdGZvcm0tc2VydmVyJyxcbiAgICByZXBvc2l0b3JpZXM6IFtNYW5hZ2VkUmVwb3NpdG9yaWVzLkFOR1VMQVJdLFxuICB9LFxuICBERVRFQ1RFRF9aT05FU19DSEFOR0U6IHtcbiAgICBkZXNjcmlwdGlvbjogJ0lzc3VlcyByZWxhdGVkIHRvIHpvbmUuanMnLFxuICAgIG5hbWU6ICdhcmVhOiB6b25lcycsXG4gICAgY29tbWl0Q2hlY2s6IChjOiBDb21taXQpID0+IGMuc2NvcGUgPT09ICd6b25lLmpzJyxcbiAgICByZXBvc2l0b3JpZXM6IFtNYW5hZ2VkUmVwb3NpdG9yaWVzLkFOR1VMQVJdLFxuICB9LFxuICBERVRFQ1RFRF9MT0NBTElaRV9DSEFOR0U6IHtcbiAgICBkZXNjcmlwdGlvbjogJ0lzc3VlcyByZWxhdGVkIHRvIGxvY2FsaXphdGlvbiBhbmQgaW50ZXJuYXRpb25hbGl6YXRpb24nLFxuICAgIG5hbWU6ICdhcmVhOiBpMThuJyxcbiAgICBjb21taXRDaGVjazogKGM6IENvbW1pdCkgPT4gYy5zY29wZSA9PT0gJ2xvY2FsaXplJyxcbiAgICByZXBvc2l0b3JpZXM6IFtNYW5hZ2VkUmVwb3NpdG9yaWVzLkFOR1VMQVJdLFxuICB9LFxufSk7XG4iXX0=