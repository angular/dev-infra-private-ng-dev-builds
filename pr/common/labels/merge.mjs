import { createTypedObject, Label, ManagedRepositories } from './base.js';
class MergeLabel extends Label {
}
export const mergeLabels = createTypedObject(MergeLabel)({
    MERGE_PRESERVE_COMMITS: {
        description: 'When the PR is merged, a rebase and merge should be performed',
        name: 'merge: preserve commits',
    },
    MERGE_SQUASH_COMMITS: {
        description: 'When the PR is merged, a squash and merge should be performed',
        name: 'merge: squash commits',
    },
    MERGE_FIX_COMMIT_MESSAGE: {
        description: 'When the PR is merged, rewrites/fixups of the commit messages are needed',
        name: 'merge: fix commit message',
        repositories: [ManagedRepositories.COMPONENTS, ManagedRepositories.ANGULAR_CLI],
    },
    MERGE_CARETAKER_NOTE: {
        description: 'Alert the caretaker performing the merge to check the PR for an out of normal action needed or note',
        name: 'merge: caretaker note',
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVyZ2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9uZy1kZXYvcHIvY29tbW9uL2xhYmVscy9tZXJnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsaUJBQWlCLEVBQUUsS0FBSyxFQUFFLG1CQUFtQixFQUFDLE1BQU0sV0FBVyxDQUFDO0FBRXhFLE1BQU0sVUFBVyxTQUFRLEtBQUs7Q0FBRztBQUVqQyxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsaUJBQWlCLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDdkQsc0JBQXNCLEVBQUU7UUFDdEIsV0FBVyxFQUFFLCtEQUErRDtRQUM1RSxJQUFJLEVBQUUseUJBQXlCO0tBQ2hDO0lBQ0Qsb0JBQW9CLEVBQUU7UUFDcEIsV0FBVyxFQUFFLCtEQUErRDtRQUM1RSxJQUFJLEVBQUUsdUJBQXVCO0tBQzlCO0lBQ0Qsd0JBQXdCLEVBQUU7UUFDeEIsV0FBVyxFQUFFLDBFQUEwRTtRQUN2RixJQUFJLEVBQUUsMkJBQTJCO1FBQ2pDLFlBQVksRUFBRSxDQUFDLG1CQUFtQixDQUFDLFVBQVUsRUFBRSxtQkFBbUIsQ0FBQyxXQUFXLENBQUM7S0FDaEY7SUFDRCxvQkFBb0IsRUFBRTtRQUNwQixXQUFXLEVBQ1QscUdBQXFHO1FBQ3ZHLElBQUksRUFBRSx1QkFBdUI7S0FDOUI7Q0FDRixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2NyZWF0ZVR5cGVkT2JqZWN0LCBMYWJlbCwgTWFuYWdlZFJlcG9zaXRvcmllc30gZnJvbSAnLi9iYXNlLmpzJztcblxuY2xhc3MgTWVyZ2VMYWJlbCBleHRlbmRzIExhYmVsIHt9XG5cbmV4cG9ydCBjb25zdCBtZXJnZUxhYmVscyA9IGNyZWF0ZVR5cGVkT2JqZWN0KE1lcmdlTGFiZWwpKHtcbiAgTUVSR0VfUFJFU0VSVkVfQ09NTUlUUzoge1xuICAgIGRlc2NyaXB0aW9uOiAnV2hlbiB0aGUgUFIgaXMgbWVyZ2VkLCBhIHJlYmFzZSBhbmQgbWVyZ2Ugc2hvdWxkIGJlIHBlcmZvcm1lZCcsXG4gICAgbmFtZTogJ21lcmdlOiBwcmVzZXJ2ZSBjb21taXRzJyxcbiAgfSxcbiAgTUVSR0VfU1FVQVNIX0NPTU1JVFM6IHtcbiAgICBkZXNjcmlwdGlvbjogJ1doZW4gdGhlIFBSIGlzIG1lcmdlZCwgYSBzcXVhc2ggYW5kIG1lcmdlIHNob3VsZCBiZSBwZXJmb3JtZWQnLFxuICAgIG5hbWU6ICdtZXJnZTogc3F1YXNoIGNvbW1pdHMnLFxuICB9LFxuICBNRVJHRV9GSVhfQ09NTUlUX01FU1NBR0U6IHtcbiAgICBkZXNjcmlwdGlvbjogJ1doZW4gdGhlIFBSIGlzIG1lcmdlZCwgcmV3cml0ZXMvZml4dXBzIG9mIHRoZSBjb21taXQgbWVzc2FnZXMgYXJlIG5lZWRlZCcsXG4gICAgbmFtZTogJ21lcmdlOiBmaXggY29tbWl0IG1lc3NhZ2UnLFxuICAgIHJlcG9zaXRvcmllczogW01hbmFnZWRSZXBvc2l0b3JpZXMuQ09NUE9ORU5UUywgTWFuYWdlZFJlcG9zaXRvcmllcy5BTkdVTEFSX0NMSV0sXG4gIH0sXG4gIE1FUkdFX0NBUkVUQUtFUl9OT1RFOiB7XG4gICAgZGVzY3JpcHRpb246XG4gICAgICAnQWxlcnQgdGhlIGNhcmV0YWtlciBwZXJmb3JtaW5nIHRoZSBtZXJnZSB0byBjaGVjayB0aGUgUFIgZm9yIGFuIG91dCBvZiBub3JtYWwgYWN0aW9uIG5lZWRlZCBvciBub3RlJyxcbiAgICBuYW1lOiAnbWVyZ2U6IGNhcmV0YWtlciBub3RlJyxcbiAgfSxcbn0pO1xuIl19