import { createTypedObject, Label, ManagedRepositories } from './base.js';
class ManagedLabel extends Label {
    constructor() {
        super(...arguments);
        /** A matching function, if the label is automatically applied by our github action, otherwise false. */
        this.commitCheck = this.params.commitCheck;
    }
}
export const managedLabels = createTypedObject(ManagedLabel)({
    DETECTED_BREAKING_CHANGE: {
        description: 'PR contains a commit with a breaking change',
        name: 'detected: breaking change',
        commitCheck: (c) => c.breakingChanges.length !== 0,
    },
    DETECTED_DEPRECATION: {
        description: 'PR contains a commit with a deprecation',
        name: 'detected: deprecation',
        commitCheck: (c) => c.deprecations.length !== 0,
    },
    DETECTED_FEATURE: {
        description: 'PR contains a feature commit',
        name: 'detected: feature',
        commitCheck: (c) => c.type === 'feat',
    },
    DETECTED_DOCS_CHANGE: {
        description: 'Related to the documentation',
        name: 'area: docs',
        commitCheck: (c) => c.type === 'docs',
    },
    DETECTED_INFRA_CHANGE: {
        description: 'Related the build and CI infrastructure of the project',
        name: 'area: build & ci',
        commitCheck: (c) => c.type === 'build' || c.type === 'ci',
    },
    DETECTED_PERF_CHANGE: {
        description: 'Issues related to performance',
        name: 'area: performance',
        commitCheck: (c) => c.type === 'perf',
    },
    // angular/angular specific labels.
    DETECTED_HTTP_CHANGE: {
        description: 'Issues related to HTTP and HTTP Client',
        name: 'area: common/http',
        commitCheck: (c) => c.scope === 'common/http' || c.scope === 'http',
        repositories: [ManagedRepositories.ANGULAR],
    },
    DETECTED_COMPILER_CHANGE: {
        description: "Issues related to `ngc`, Angular's template compiler",
        name: 'area: compiler',
        commitCheck: (c) => c.scope === 'compiler' || c.scope === 'compiler-cli',
        repositories: [ManagedRepositories.ANGULAR],
    },
    DETECTED_PLATFORM_BROWSER_CHANGE: {
        description: 'Issues related to the framework runtime',
        name: 'area: core',
        commitCheck: (c) => c.scope === 'platform-browser' ||
            c.scope === 'core' ||
            c.scope === 'platform-browser-dynamic',
        repositories: [ManagedRepositories.ANGULAR],
    },
    DETECTED_PLATFORM_SERVER_CHANGE: {
        description: 'Issues related to server-side rendering',
        name: 'area: server',
        commitCheck: (c) => c.scope === 'platform-server',
        repositories: [ManagedRepositories.ANGULAR],
    },
    DETECTED_ZONES_CHANGE: {
        description: 'Issues related to zone.js',
        name: 'area: zones',
        commitCheck: (c) => c.scope === 'zone.js',
        repositories: [ManagedRepositories.ANGULAR],
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFuYWdlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL25nLWRldi9wci9jb21tb24vbGFiZWxzL21hbmFnZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFDLGlCQUFpQixFQUFFLEtBQUssRUFBZSxtQkFBbUIsRUFBQyxNQUFNLFdBQVcsQ0FBQztBQU9yRixNQUFNLFlBQWEsU0FBUSxLQUF3QjtJQUFuRDs7UUFDRSx3R0FBd0c7UUFDeEcsZ0JBQVcsR0FBMkIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUM7SUFDaEUsQ0FBQztDQUFBO0FBRUQsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFHLGlCQUFpQixDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQzNELHdCQUF3QixFQUFFO1FBQ3hCLFdBQVcsRUFBRSw2Q0FBNkM7UUFDMUQsSUFBSSxFQUFFLDJCQUEyQjtRQUNqQyxXQUFXLEVBQUUsQ0FBQyxDQUFTLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxlQUFlLENBQUMsTUFBTSxLQUFLLENBQUM7S0FDM0Q7SUFDRCxvQkFBb0IsRUFBRTtRQUNwQixXQUFXLEVBQUUseUNBQXlDO1FBQ3RELElBQUksRUFBRSx1QkFBdUI7UUFDN0IsV0FBVyxFQUFFLENBQUMsQ0FBUyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLE1BQU0sS0FBSyxDQUFDO0tBQ3hEO0lBQ0QsZ0JBQWdCLEVBQUU7UUFDaEIsV0FBVyxFQUFFLDhCQUE4QjtRQUMzQyxJQUFJLEVBQUUsbUJBQW1CO1FBQ3pCLFdBQVcsRUFBRSxDQUFDLENBQVMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksS0FBSyxNQUFNO0tBQzlDO0lBQ0Qsb0JBQW9CLEVBQUU7UUFDcEIsV0FBVyxFQUFFLDhCQUE4QjtRQUMzQyxJQUFJLEVBQUUsWUFBWTtRQUNsQixXQUFXLEVBQUUsQ0FBQyxDQUFTLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLEtBQUssTUFBTTtLQUM5QztJQUNELHFCQUFxQixFQUFFO1FBQ3JCLFdBQVcsRUFBRSx3REFBd0Q7UUFDckUsSUFBSSxFQUFFLGtCQUFrQjtRQUN4QixXQUFXLEVBQUUsQ0FBQyxDQUFTLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLEtBQUssT0FBTyxJQUFJLENBQUMsQ0FBQyxJQUFJLEtBQUssSUFBSTtLQUNsRTtJQUNELG9CQUFvQixFQUFFO1FBQ3BCLFdBQVcsRUFBRSwrQkFBK0I7UUFDNUMsSUFBSSxFQUFFLG1CQUFtQjtRQUN6QixXQUFXLEVBQUUsQ0FBQyxDQUFTLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLEtBQUssTUFBTTtLQUM5QztJQUVELG1DQUFtQztJQUNuQyxvQkFBb0IsRUFBRTtRQUNwQixXQUFXLEVBQUUsd0NBQXdDO1FBQ3JELElBQUksRUFBRSxtQkFBbUI7UUFDekIsV0FBVyxFQUFFLENBQUMsQ0FBUyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxLQUFLLGFBQWEsSUFBSSxDQUFDLENBQUMsS0FBSyxLQUFLLE1BQU07UUFDM0UsWUFBWSxFQUFFLENBQUMsbUJBQW1CLENBQUMsT0FBTyxDQUFDO0tBQzVDO0lBQ0Qsd0JBQXdCLEVBQUU7UUFDeEIsV0FBVyxFQUFFLHNEQUFzRDtRQUNuRSxJQUFJLEVBQUUsZ0JBQWdCO1FBQ3RCLFdBQVcsRUFBRSxDQUFDLENBQVMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssS0FBSyxVQUFVLElBQUksQ0FBQyxDQUFDLEtBQUssS0FBSyxjQUFjO1FBQ2hGLFlBQVksRUFBRSxDQUFDLG1CQUFtQixDQUFDLE9BQU8sQ0FBQztLQUM1QztJQUNELGdDQUFnQyxFQUFFO1FBQ2hDLFdBQVcsRUFBRSx5Q0FBeUM7UUFDdEQsSUFBSSxFQUFFLFlBQVk7UUFDbEIsV0FBVyxFQUFFLENBQUMsQ0FBUyxFQUFFLEVBQUUsQ0FDekIsQ0FBQyxDQUFDLEtBQUssS0FBSyxrQkFBa0I7WUFDOUIsQ0FBQyxDQUFDLEtBQUssS0FBSyxNQUFNO1lBQ2xCLENBQUMsQ0FBQyxLQUFLLEtBQUssMEJBQTBCO1FBQ3hDLFlBQVksRUFBRSxDQUFDLG1CQUFtQixDQUFDLE9BQU8sQ0FBQztLQUM1QztJQUNELCtCQUErQixFQUFFO1FBQy9CLFdBQVcsRUFBRSx5Q0FBeUM7UUFDdEQsSUFBSSxFQUFFLGNBQWM7UUFDcEIsV0FBVyxFQUFFLENBQUMsQ0FBUyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxLQUFLLGlCQUFpQjtRQUN6RCxZQUFZLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQyxPQUFPLENBQUM7S0FDNUM7SUFDRCxxQkFBcUIsRUFBRTtRQUNyQixXQUFXLEVBQUUsMkJBQTJCO1FBQ3hDLElBQUksRUFBRSxhQUFhO1FBQ25CLFdBQVcsRUFBRSxDQUFDLENBQVMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssS0FBSyxTQUFTO1FBQ2pELFlBQVksRUFBRSxDQUFDLG1CQUFtQixDQUFDLE9BQU8sQ0FBQztLQUM1QztDQUNGLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tbWl0fSBmcm9tICcuLi8uLi8uLi9jb21taXQtbWVzc2FnZS9wYXJzZS5qcyc7XG5pbXBvcnQge2NyZWF0ZVR5cGVkT2JqZWN0LCBMYWJlbCwgTGFiZWxQYXJhbXMsIE1hbmFnZWRSZXBvc2l0b3JpZXN9IGZyb20gJy4vYmFzZS5qcyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTWFuYWdlTGFiZWxQYXJhbXMgZXh0ZW5kcyBMYWJlbFBhcmFtcyB7XG4gIC8qKiBBIG1hdGNoaW5nIGZ1bmN0aW9uLCBpZiB0aGUgbGFiZWwgaXMgYXV0b21hdGljYWxseSBhcHBsaWVkIGJ5IG91ciBnaXRodWIgYWN0aW9uLCBvdGhlcndpc2UgZmFsc2UuICovXG4gIGNvbW1pdENoZWNrOiAoYzogQ29tbWl0KSA9PiBib29sZWFuO1xufVxuXG5jbGFzcyBNYW5hZ2VkTGFiZWwgZXh0ZW5kcyBMYWJlbDxNYW5hZ2VMYWJlbFBhcmFtcz4ge1xuICAvKiogQSBtYXRjaGluZyBmdW5jdGlvbiwgaWYgdGhlIGxhYmVsIGlzIGF1dG9tYXRpY2FsbHkgYXBwbGllZCBieSBvdXIgZ2l0aHViIGFjdGlvbiwgb3RoZXJ3aXNlIGZhbHNlLiAqL1xuICBjb21taXRDaGVjazogKGM6IENvbW1pdCkgPT4gYm9vbGVhbiA9IHRoaXMucGFyYW1zLmNvbW1pdENoZWNrO1xufVxuXG5leHBvcnQgY29uc3QgbWFuYWdlZExhYmVscyA9IGNyZWF0ZVR5cGVkT2JqZWN0KE1hbmFnZWRMYWJlbCkoe1xuICBERVRFQ1RFRF9CUkVBS0lOR19DSEFOR0U6IHtcbiAgICBkZXNjcmlwdGlvbjogJ1BSIGNvbnRhaW5zIGEgY29tbWl0IHdpdGggYSBicmVha2luZyBjaGFuZ2UnLFxuICAgIG5hbWU6ICdkZXRlY3RlZDogYnJlYWtpbmcgY2hhbmdlJyxcbiAgICBjb21taXRDaGVjazogKGM6IENvbW1pdCkgPT4gYy5icmVha2luZ0NoYW5nZXMubGVuZ3RoICE9PSAwLFxuICB9LFxuICBERVRFQ1RFRF9ERVBSRUNBVElPTjoge1xuICAgIGRlc2NyaXB0aW9uOiAnUFIgY29udGFpbnMgYSBjb21taXQgd2l0aCBhIGRlcHJlY2F0aW9uJyxcbiAgICBuYW1lOiAnZGV0ZWN0ZWQ6IGRlcHJlY2F0aW9uJyxcbiAgICBjb21taXRDaGVjazogKGM6IENvbW1pdCkgPT4gYy5kZXByZWNhdGlvbnMubGVuZ3RoICE9PSAwLFxuICB9LFxuICBERVRFQ1RFRF9GRUFUVVJFOiB7XG4gICAgZGVzY3JpcHRpb246ICdQUiBjb250YWlucyBhIGZlYXR1cmUgY29tbWl0JyxcbiAgICBuYW1lOiAnZGV0ZWN0ZWQ6IGZlYXR1cmUnLFxuICAgIGNvbW1pdENoZWNrOiAoYzogQ29tbWl0KSA9PiBjLnR5cGUgPT09ICdmZWF0JyxcbiAgfSxcbiAgREVURUNURURfRE9DU19DSEFOR0U6IHtcbiAgICBkZXNjcmlwdGlvbjogJ1JlbGF0ZWQgdG8gdGhlIGRvY3VtZW50YXRpb24nLFxuICAgIG5hbWU6ICdhcmVhOiBkb2NzJyxcbiAgICBjb21taXRDaGVjazogKGM6IENvbW1pdCkgPT4gYy50eXBlID09PSAnZG9jcycsXG4gIH0sXG4gIERFVEVDVEVEX0lORlJBX0NIQU5HRToge1xuICAgIGRlc2NyaXB0aW9uOiAnUmVsYXRlZCB0aGUgYnVpbGQgYW5kIENJIGluZnJhc3RydWN0dXJlIG9mIHRoZSBwcm9qZWN0JyxcbiAgICBuYW1lOiAnYXJlYTogYnVpbGQgJiBjaScsXG4gICAgY29tbWl0Q2hlY2s6IChjOiBDb21taXQpID0+IGMudHlwZSA9PT0gJ2J1aWxkJyB8fCBjLnR5cGUgPT09ICdjaScsXG4gIH0sXG4gIERFVEVDVEVEX1BFUkZfQ0hBTkdFOiB7XG4gICAgZGVzY3JpcHRpb246ICdJc3N1ZXMgcmVsYXRlZCB0byBwZXJmb3JtYW5jZScsXG4gICAgbmFtZTogJ2FyZWE6IHBlcmZvcm1hbmNlJyxcbiAgICBjb21taXRDaGVjazogKGM6IENvbW1pdCkgPT4gYy50eXBlID09PSAncGVyZicsXG4gIH0sXG5cbiAgLy8gYW5ndWxhci9hbmd1bGFyIHNwZWNpZmljIGxhYmVscy5cbiAgREVURUNURURfSFRUUF9DSEFOR0U6IHtcbiAgICBkZXNjcmlwdGlvbjogJ0lzc3VlcyByZWxhdGVkIHRvIEhUVFAgYW5kIEhUVFAgQ2xpZW50JyxcbiAgICBuYW1lOiAnYXJlYTogY29tbW9uL2h0dHAnLFxuICAgIGNvbW1pdENoZWNrOiAoYzogQ29tbWl0KSA9PiBjLnNjb3BlID09PSAnY29tbW9uL2h0dHAnIHx8IGMuc2NvcGUgPT09ICdodHRwJyxcbiAgICByZXBvc2l0b3JpZXM6IFtNYW5hZ2VkUmVwb3NpdG9yaWVzLkFOR1VMQVJdLFxuICB9LFxuICBERVRFQ1RFRF9DT01QSUxFUl9DSEFOR0U6IHtcbiAgICBkZXNjcmlwdGlvbjogXCJJc3N1ZXMgcmVsYXRlZCB0byBgbmdjYCwgQW5ndWxhcidzIHRlbXBsYXRlIGNvbXBpbGVyXCIsXG4gICAgbmFtZTogJ2FyZWE6IGNvbXBpbGVyJyxcbiAgICBjb21taXRDaGVjazogKGM6IENvbW1pdCkgPT4gYy5zY29wZSA9PT0gJ2NvbXBpbGVyJyB8fCBjLnNjb3BlID09PSAnY29tcGlsZXItY2xpJyxcbiAgICByZXBvc2l0b3JpZXM6IFtNYW5hZ2VkUmVwb3NpdG9yaWVzLkFOR1VMQVJdLFxuICB9LFxuICBERVRFQ1RFRF9QTEFURk9STV9CUk9XU0VSX0NIQU5HRToge1xuICAgIGRlc2NyaXB0aW9uOiAnSXNzdWVzIHJlbGF0ZWQgdG8gdGhlIGZyYW1ld29yayBydW50aW1lJyxcbiAgICBuYW1lOiAnYXJlYTogY29yZScsXG4gICAgY29tbWl0Q2hlY2s6IChjOiBDb21taXQpID0+XG4gICAgICBjLnNjb3BlID09PSAncGxhdGZvcm0tYnJvd3NlcicgfHxcbiAgICAgIGMuc2NvcGUgPT09ICdjb3JlJyB8fFxuICAgICAgYy5zY29wZSA9PT0gJ3BsYXRmb3JtLWJyb3dzZXItZHluYW1pYycsXG4gICAgcmVwb3NpdG9yaWVzOiBbTWFuYWdlZFJlcG9zaXRvcmllcy5BTkdVTEFSXSxcbiAgfSxcbiAgREVURUNURURfUExBVEZPUk1fU0VSVkVSX0NIQU5HRToge1xuICAgIGRlc2NyaXB0aW9uOiAnSXNzdWVzIHJlbGF0ZWQgdG8gc2VydmVyLXNpZGUgcmVuZGVyaW5nJyxcbiAgICBuYW1lOiAnYXJlYTogc2VydmVyJyxcbiAgICBjb21taXRDaGVjazogKGM6IENvbW1pdCkgPT4gYy5zY29wZSA9PT0gJ3BsYXRmb3JtLXNlcnZlcicsXG4gICAgcmVwb3NpdG9yaWVzOiBbTWFuYWdlZFJlcG9zaXRvcmllcy5BTkdVTEFSXSxcbiAgfSxcbiAgREVURUNURURfWk9ORVNfQ0hBTkdFOiB7XG4gICAgZGVzY3JpcHRpb246ICdJc3N1ZXMgcmVsYXRlZCB0byB6b25lLmpzJyxcbiAgICBuYW1lOiAnYXJlYTogem9uZXMnLFxuICAgIGNvbW1pdENoZWNrOiAoYzogQ29tbWl0KSA9PiBjLnNjb3BlID09PSAnem9uZS5qcycsXG4gICAgcmVwb3NpdG9yaWVzOiBbTWFuYWdlZFJlcG9zaXRvcmllcy5BTkdVTEFSXSxcbiAgfSxcbn0pO1xuIl19