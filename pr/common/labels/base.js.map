{"version":3,"file":"base.js","sourceRoot":"","sources":["base.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAsC,gBAAmB,EAAE,EAAE;IAC5F,OAAO,CAAC,GAAqD,EAAE,EAAE;QAC/D,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE,CAAC;YACtB,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAC5C,CAAC;QACD,OAAO,GAAsD,CAAC;IAChE,CAAC,CAAC;AACJ,CAAC,CAAC;AAaF,MAAM,OAAO,KAAK;IAehB,YAA4B,MAAS;QAAT,WAAM,GAAN,MAAM,CAAG;QAbrC,iBAAY,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,IAAI;YACzC,mBAAmB,CAAC,OAAO;YAC3B,mBAAmB,CAAC,WAAW;YAC/B,mBAAmB,CAAC,UAAU;YAC9B,mBAAmB,CAAC,SAAS;SAC9B,CAAC;QAEF,SAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;QAExB,gBAAW,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;QAEtC,UAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;IAEc,CAAC;CAC1C;AAED,MAAM,CAAN,IAAY,mBAKX;AALD,WAAY,mBAAmB;IAC7B,gDAAyB,CAAA;IACzB,0CAAmB,CAAA;IACnB,kDAA2B,CAAA;IAC3B,8CAAuB,CAAA;AACzB,CAAC,EALW,mBAAmB,KAAnB,mBAAmB,QAK9B","sourcesContent":["export const createTypedObject = <T extends new (...args: any) => any>(LabelConstructor: T) => {\n  return (val: Record<PropertyKey, ConstructorParameters<T>[0]>) => {\n    for (const key in val) {\n      val[key] = new LabelConstructor(val[key]);\n    }\n    return val as unknown as Record<PropertyKey, InstanceType<T>>;\n  };\n};\n\nexport interface LabelParams {\n  /* The label string. */\n  name: string;\n  /* The label description. */\n  description: string;\n  /* The hexadecimal color code for the label, without the leading */\n  color?: string;\n  /** The repositories the label is to be used in. */\n  repositories?: ManagedRepositories[];\n}\n\nexport class Label<T extends LabelParams = LabelParams> {\n  /** The repositories the label is to be used in. */\n  repositories = this.params.repositories || [\n    ManagedRepositories.ANGULAR,\n    ManagedRepositories.ANGULAR_CLI,\n    ManagedRepositories.COMPONENTS,\n    ManagedRepositories.DEV_INFRA,\n  ];\n  /* The label string. */\n  name = this.params.name;\n  /* The label description. */\n  description = this.params.description;\n  /* The hexadecimal color code for the label, without the leading */\n  color = this.params.color;\n\n  constructor(public readonly params: T) {}\n}\n\nexport enum ManagedRepositories {\n  COMPONENTS = 'components',\n  ANGULAR = 'angular',\n  ANGULAR_CLI = 'angular-cli',\n  DEV_INFRA = 'dev-infra',\n}\n"]}