{"version":3,"file":"yargs.js","sourceRoot":"","sources":["yargs.ts"],"names":[],"mappings":"AAAA,OAAO,KAAa,MAAM,OAAO,CAAC;AAMlC,MAAM,kBAAkB,GAAkB,EAAE,CAAC;AAG7C,MAAM,UAAU,yBAAyB,CAAC,EAAe;IACvD,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC9B,CAAC;AAMD,MAAM,CAAC,KAAK,UAAU,+BAA+B,CAAC,kBAAwC;IAC5F,IAAI,GAAG,GAAiB,IAAI,CAAC;IAC7B,IAAI,CAAC;QACH,MAAM,kBAAkB,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aACnD,WAAW,CAAC,KAAK,CAAC;aAClB,KAAK,EAAE,CAAC;IACb,CAAC;IAAC,OAAO,CAAC,EAAE,CAAC;QACX,GAAG,GAAG,CAAU,CAAC;QACjB,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAe,CAAC,EAAE,CAAC;YACrD,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC;QACvB,CAAC;IACH,CAAC;YAAS,CAAC;QACT,KAAK,MAAM,aAAa,IAAI,kBAAkB,EAAE,CAAC;YAC/C,MAAM,aAAa,CAAC,GAAG,CAAC,CAAC;QAC3B,CAAC;IACH,CAAC;AACH,CAAC","sourcesContent":["import yargs, {Argv} from 'yargs';\n\n// A function to be called when the command completes.\ntype CompletedFn = (err: Error | null) => Promise<void> | void;\n\n/** List of functions to be called upon command completion. */\nconst completedFunctions: CompletedFn[] = [];\n\n/** Register a function to be called when the command completes. */\nexport function registerCompletedFunction(fn: CompletedFn) {\n  completedFunctions.push(fn);\n}\n\n/**\n * Run the yargs process, as configured by the supplied function, calling a set of completion\n * functions after the command completes.\n */\nexport async function runParserWithCompletedFunctions(applyConfiguration: (argv: Argv) => Argv) {\n  let err: Error | null = null;\n  try {\n    await applyConfiguration(yargs(process.argv.slice(2)))\n      .exitProcess(false)\n      .parse();\n  } catch (e) {\n    err = e as Error;\n    if ([undefined, 0].includes(process.exitCode as any)) {\n      process.exitCode = 1;\n    }\n  } finally {\n    for (const completedFunc of completedFunctions) {\n      await completedFunc(err);\n    }\n  }\n}\n"]}