{"version":3,"file":"github-urls.js","sourceRoot":"","sources":["github-urls.ts"],"names":[],"mappings":"AAQA,OAAO,EAAC,GAAG,EAAC,MAAM,KAAK,CAAC;AAMxB,MAAM,CAAC,MAAM,yBAAyB,GAAG,oCAAoC,CAAC;AAG9E,MAAM,CAAC,MAAM,yBAAyB,GAAG,wCAAwC,CAAC;AAGlF,MAAM,UAAU,qBAAqB,CAAC,cAAsB,EAAE,KAAa;IACzE,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,cAAc,CAAC,CAAC;IACpC,GAAG,CAAC,QAAQ,GAAG,KAAK,CAAC;IACrB,GAAG,CAAC,QAAQ,GAAG,gBAAgB,CAAC;IAChC,OAAO,GAAG,CAAC,IAAI,CAAC;AAClB,CAAC;AAGD,MAAM,UAAU,mBAAmB,CACjC,MAAuD,EACvD,WAAoB;IAEpB,IAAI,MAAM,CAAC,MAAM,EAAE,CAAC;QAClB,OAAO,kBAAkB,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,IAAI,MAAM,CAAC;IAC7D,CAAC;IACD,MAAM,WAAW,GAAG,sBAAsB,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,IAAI,MAAM,CAAC;IAC5E,IAAI,WAAW,KAAK,SAAS,EAAE,CAAC;QAC9B,OAAO,qBAAqB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;IACzD,CAAC;IACD,OAAO,WAAW,CAAC;AACrB,CAAC;AAGD,MAAM,UAAU,yBAAyB,CAAC,MAAiB,EAAE,UAAkB;IAC7E,MAAM,EAAC,KAAK,EAAE,IAAI,EAAC,GAAG,MAAM,CAAC,YAAY,CAAC;IAC1C,OAAO,sBAAsB,KAAK,IAAI,IAAI,YAAY,UAAU,EAAE,CAAC;AACrE,CAAC;AAGD,MAAM,UAAU,kBAAkB,CAAC,MAAiB,EAAE,GAAW,EAAE,gBAAwB;IACzF,MAAM,EAAC,KAAK,EAAE,IAAI,EAAC,GAAG,MAAM,CAAC,YAAY,CAAC;IAC1C,OAAO,sBAAsB,KAAK,IAAI,IAAI,SAAS,GAAG,IAAI,gBAAgB,EAAE,CAAC;AAC/E,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {URL} from 'url';\n\nimport {GithubConfig} from '../config.js';\nimport {GitClient} from './git-client.js';\n\n/** URL to the Github page where personal access tokens can be managed. */\nexport const GITHUB_TOKEN_SETTINGS_URL = 'https://github.com/settings/tokens';\n\n/** URL to the Github page where personal access tokens can be generated. */\nexport const GITHUB_TOKEN_GENERATE_URL = 'https://github.com/settings/tokens/new';\n\n/** Adds the provided token to the given Github HTTPs remote url. */\nexport function addTokenToGitHttpsUrl(githubHttpsUrl: string, token: string) {\n  const url = new URL(githubHttpsUrl);\n  url.password = token;\n  url.username = 'x-access-token';\n  return url.href;\n}\n\n/** Gets the repository Git URL for the given github config. */\nexport function getRepositoryGitUrl(\n  config: Pick<GithubConfig, 'name' | 'owner' | 'useSsh'>,\n  githubToken?: string,\n): string {\n  if (config.useSsh) {\n    return `git@github.com:${config.owner}/${config.name}.git`;\n  }\n  const baseHttpUrl = `https://github.com/${config.owner}/${config.name}.git`;\n  if (githubToken !== undefined) {\n    return addTokenToGitHttpsUrl(baseHttpUrl, githubToken);\n  }\n  return baseHttpUrl;\n}\n\n/** Gets a Github URL that refers to a list of recent commits within a specified branch. */\nexport function getListCommitsInBranchUrl(client: GitClient, branchName: string) {\n  const {owner, repo} = client.remoteParams;\n  return `https://github.com/${owner}/${repo}/commits/${branchName}`;\n}\n\n/** Gets a Github URL for viewing the file contents of a specified file for the given ref. */\nexport function getFileContentsUrl(client: GitClient, ref: string, relativeFilePath: string) {\n  const {owner, repo} = client.remoteParams;\n  return `https://github.com/${owner}/${repo}/blob/${ref}/${relativeFilePath}`;\n}\n"]}