{"version":3,"file":"github-yargs.js","sourceRoot":"","sources":["github-yargs.ts"],"names":[],"mappings":"AAQA,OAAO,EAAC,GAAG,EAAC,MAAM,eAAe,CAAC;AAGlC,OAAO,EAAC,sBAAsB,EAAC,MAAM,+BAA+B,CAAC;AACrE,OAAO,EAAC,yBAAyB,EAAC,MAAM,kBAAkB,CAAC;AAG3D,MAAM,UAAU,oBAAoB,CAAI,IAAa;IACnD,OAAO,CACL,IAAI;SAID,MAAM,CAAC,cAA+B,EAAE;QACvC,IAAI,EAAE,QAAQ;QACd,OAAO,EAAE,EAAE;QACX,kBAAkB,EAAE,eAAe;QACnC,WAAW,EAAE,8EAA8E;QAG3F,MAAM,EAAE,4CAA4C;KACrD,CAAC,CACL,CAAC;AACJ,CAAC;AAYD,MAAM,UAAU,4CAA4C,CAAC,KAAyB;IACpF,MAAM,WAAW,GAAG,KAAK,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;IACnF,IAAI,CAAC,WAAW,EAAE,CAAC;QACjB,GAAG,CAAC,KAAK,CAAC,0EAA0E,CAAC,CAAC;QACtF,GAAG,CAAC,KAAK,CAAC,6DAA6D,CAAC,CAAC;QACzE,GAAG,CAAC,IAAI,CAAC,kCAAkC,yBAAyB,EAAE,CAAC,CAAC;QACxE,MAAM,KAAK,CAAC,uCAAuC,CAAC,CAAC;IACvD,CAAC;IAED,sBAAsB,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;AAChD,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Log} from '../logging.js';\n\nimport {Argv} from 'yargs';\nimport {AuthenticatedGitClient} from './authenticated-git-client.js';\nimport {GITHUB_TOKEN_GENERATE_URL} from './github-urls.js';\n\n/** Sets up the `github-token` command option for the given Yargs instance. */\nexport function addGithubTokenOption<T>(argv: Argv<T>) {\n  return (\n    argv\n      // 'github-token' is casted to 'githubToken' to properly set up typings to reflect the key in\n      // the Argv object being camelCase rather than kebab case due to the `camel-case-expansion`\n      // config: https://github.com/yargs/yargs-parser#camel-case-expansion\n      .option('github-token' as 'githubToken', {\n        type: 'string',\n        default: '',\n        defaultDescription: '<LOCAL_TOKEN>',\n        description: 'Github token. If not set, token is retrieved from the environment variables.',\n        // We use the coerce function as a way of allowing the user to provide the value, otherwise\n        // looking for it in the environment.\n        coerce: configureGitClientWithTokenOrFromEnvironment,\n      })\n  );\n}\n\n/**\n * If the github token is able to be determined, either by being provided as a parameter or being\n * present in the environment, it is used to set the configuration for the AuthenticatedGitClient.\n * Otherwise, an error is thrown.\n *\n * We explicitly return void for this function to allow this function to be used as a `coerce`\n * function for yargs. This allows for the option, `github-token` to be available for users without\n * including it in the generated types for the `Argv` object on a command, helping us to enforce\n * that the token should only be accessed from the AuthenticatedGitClient itself.\n */\nexport function configureGitClientWithTokenOrFromEnvironment(token: string | undefined): void {\n  const githubToken = token || (process.env['GITHUB_TOKEN'] ?? process.env['TOKEN']);\n  if (!githubToken) {\n    Log.error('No Github token set. Please set the `GITHUB_TOKEN` environment variable.');\n    Log.error('Alternatively, pass the `--github-token` command line flag.');\n    Log.warn(`You can generate a token here: ${GITHUB_TOKEN_GENERATE_URL}`);\n    throw Error('Unable to determine the Github token.');\n  }\n\n  AuthenticatedGitClient.configure(githubToken);\n}\n"]}