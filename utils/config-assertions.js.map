{"version":3,"file":"config-assertions.js","sourceRoot":"","sources":["config-assertions.ts"],"names":[],"mappings":"","sourcesContent":["import {NgDevConfig} from './config.js';\n\ntype UnionToIntersection<U> = (U extends unknown ? (union: U) => void : never) extends (\n  intersection: infer I,\n) => void\n  ? I\n  : never;\n\ntype AssertedType<A> = A extends AssertionFn<infer T> ? T : never;\ntype AllAssertedTypes<A extends readonly AssertionFn<unknown>[]> = {\n  [K in keyof A]: AssertedType<A[K]>;\n};\ntype ExtractValuesAsUnionFromObject<T> = T[keyof T & number];\n\nexport type Assertions<A extends readonly AssertionFn<unknown>[]> = UnionToIntersection<\n  ExtractValuesAsUnionFromObject<AllAssertedTypes<A>>\n>;\nexport type AssertionFn<T> = (value: NgDevConfig & Partial<T>) => asserts value is NgDevConfig & T;\nexport type MultipleAssertions = AssertionFn<unknown>[];\n"]}