{"version":3,"file":"config-cache.js","sourceRoot":"","sources":["config-cache.ts"],"names":[],"mappings":"AAcA,IAAI,YAAY,GAAc,IAAI,CAAC;AAMnC,MAAM,UAAU,eAAe,CAAC,MAAU;IACxC,YAAY,GAAG,MAAM,CAAC;AACxB,CAAC;AAGD,MAAM,UAAU,eAAe;IAC7B,OAAO,YAAY,CAAC;AACtB,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// NOTE: This file is decoupled from `config.ts` and is mainly responsible for storing\n// the previously read configuration. It is a separate file to allow for it being a\n// separate Bazel target with reduced dependencies. This file is used in the overall\n// jasmine bootstrap logic and we wouldn't want to bring all of `ng-dev/utils`.\n\n/** The configuration for ng-dev. */\nlet cachedConfig: {} | null = null;\n\n/**\n * Set the cached configuration object to be loaded later. Only to be used on\n * CI and test situations in which loading from the `.ng-dev/` directory is not possible.\n */\nexport function setCachedConfig(config: {}): void {\n  cachedConfig = config;\n}\n\n/** Gets the cached configuration, or `null` if not set. */\nexport function getCachedConfig(): {} | null {\n  return cachedConfig;\n}\n"]}