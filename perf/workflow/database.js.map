{"version":3,"file":"database.js","sourceRoot":"","sources":["database.ts"],"names":[],"mappings":"AAQA,OAAO,EAAC,OAAO,EAAC,MAAM,uBAAuB,CAAC;AA4B9C,MAAM,CAAC,KAAK,UAAU,4BAA4B,CAAC,MAAoC;IAErF,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC;QAC1B,SAAS,EAAE,iBAAiB;KAC7B,CAAC,CAAC;IAEH,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;IAEpD,MAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC;IAEzD,MAAM,wBAAwB,GAAG,QAAQ,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;IAEvE,IAAI,CAAC;QACH,MAAM,wBAAwB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAChD,CAAC;YAAS,CAAC;QACT,MAAM,QAAQ,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;AACH,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Spanner} from '@google-cloud/spanner';\n\n/**\n * The workflow performance results are stored in a spanner database within our\n * project to be able to retrieve later, The commit sha will be used as a foreign\n * key to point to specific commits found in the table of commit shas expressing\n * the full graph of commits within the git graph for the repository.\n *\n * The workflow performance table is defined with the following characteristics.\n *\n * |--------------------------------------------------------------------|\n * |              Column              |     Type     |       Notes      |\n * |--------------------------------------------------------------------|\n * |     workflow_performance_id      |  STRING(36)  |   Autogenerated  |\n * |     commit_sha                   |  STRING(40)  |                  |\n * |     value                        |  FLOAT64     |                  |\n * |     name                         |  STRING(256) |                  |\n * |--------------------------------------------------------------------|\n */\n\n/** The reuslt of workflow performance eresult to be stored in the database. */\nexport interface WorkflowPerformanceRowResult {\n  commit_sha: string;\n  value: number;\n  name: string;\n}\n\n/** Add a single workflow performance result to the spanner database. */\nexport async function addWorkflowPerformanceResult(result: WorkflowPerformanceRowResult) {\n  /** The spanner client instance. */\n  const spanner = new Spanner({\n    projectId: 'internal-200822',\n  });\n  /** The spanner instance within our project. */\n  const instance = spanner.instance('ng-measurables');\n  /** The commit performance database within our spanner instance. */\n  const database = instance.database('commit_performance');\n  /** The table holding workflow performance information. */\n  const workflowPerformanceTable = database.table('WorkflowPerformance');\n\n  try {\n    await workflowPerformanceTable.insert(result);\n  } finally {\n    await database.close();\n  }\n}\n"]}