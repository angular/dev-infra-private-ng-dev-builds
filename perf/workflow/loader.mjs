import { readFile } from 'fs/promises';
import { parse } from 'yaml';
export async function loadWorkflows(src) {
    /** The set of workflows which can be executed. */
    const filteredWorkflows = {};
    /** The workflow configuration file content as a string.  */
    const rawWorkflows = await readFile(src, { encoding: 'utf-8' });
    /** The object parsed from the workflow configuration file, holding the workflow configurations. */
    const workflows = parse(rawWorkflows).workflows;
    // Remove any workflow which is marked as disabled.
    for (const [name, workflow] of Object.entries(workflows)) {
        if (workflow.disabled !== true) {
            filteredWorkflows[name] = workflow;
        }
    }
    return filteredWorkflows;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbmctZGV2L3BlcmYvd29ya2Zsb3cvbG9hZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxhQUFhLENBQUM7QUFDckMsT0FBTyxFQUFDLEtBQUssRUFBQyxNQUFNLE1BQU0sQ0FBQztBQWUzQixNQUFNLENBQUMsS0FBSyxVQUFVLGFBQWEsQ0FBQyxHQUFXO0lBQzdDLGtEQUFrRDtJQUNsRCxNQUFNLGlCQUFpQixHQUE4QixFQUFFLENBQUM7SUFDeEQsNERBQTREO0lBQzVELE1BQU0sWUFBWSxHQUFHLE1BQU0sUUFBUSxDQUFDLEdBQUcsRUFBRSxFQUFDLFFBQVEsRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0lBQzlELG1HQUFtRztJQUNuRyxNQUFNLFNBQVMsR0FBRyxLQUFLLENBQUMsWUFBWSxDQUFDLENBQUMsU0FBc0MsQ0FBQztJQUU3RSxtREFBbUQ7SUFDbkQsS0FBSyxNQUFNLENBQUMsSUFBSSxFQUFFLFFBQVEsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQztRQUN6RCxJQUFJLFFBQVEsQ0FBQyxRQUFRLEtBQUssSUFBSSxFQUFFLENBQUM7WUFDL0IsaUJBQWlCLENBQUMsSUFBSSxDQUFDLEdBQUcsUUFBUSxDQUFDO1FBQ3JDLENBQUM7SUFDSCxDQUFDO0lBRUQsT0FBTyxpQkFBaUIsQ0FBQztBQUMzQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtyZWFkRmlsZX0gZnJvbSAnZnMvcHJvbWlzZXMnO1xuaW1wb3J0IHtwYXJzZX0gZnJvbSAneWFtbCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgV29ya2Zsb3cge1xuICAvLyBUaGUgZnJpZW5kbHkgbmFtZSBvZiB0aGUgd29ya2Zsb3cuXG4gIG5hbWU6IHN0cmluZztcbiAgLy8gVGhlIHNldCBvZiBjb21tYW5kcyB0byBydW4gdW5kZXIgdGltaW5nIHRlc3QgZm9yIHRoZSB3b3JrZmxvdy5cbiAgd29ya2Zsb3c6IHN0cmluZ1tdO1xuICAvLyBUaGUgc2V0IG9mIGNvbW1hbmRzIHRvIHJ1biBpbiBwcmVwYXJhdGlvbiBmb3IgdGhlIHdvcmtmbG93LlxuICBwcmVwYXJlPzogc3RyaW5nW107XG4gIC8vIFRoZSBzZXQgb2YgY29tbWFuZHMgdG8gcnVuIGFzIGEgY2xlYW51cC5cbiAgY2xlYW51cD86IHN0cmluZ1tdO1xuICAvLyBXaGV0aGVyIHRoZSB3b3JrZmxvdyBpcyB0ZW1wb3JhcmlseSBkaXNhYmxlZC5cbiAgZGlzYWJsZWQ/OiB0cnVlO1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbG9hZFdvcmtmbG93cyhzcmM6IHN0cmluZykge1xuICAvKiogVGhlIHNldCBvZiB3b3JrZmxvd3Mgd2hpY2ggY2FuIGJlIGV4ZWN1dGVkLiAqL1xuICBjb25zdCBmaWx0ZXJlZFdvcmtmbG93czoge1trZXk6IHN0cmluZ106IFdvcmtmbG93fSA9IHt9O1xuICAvKiogVGhlIHdvcmtmbG93IGNvbmZpZ3VyYXRpb24gZmlsZSBjb250ZW50IGFzIGEgc3RyaW5nLiAgKi9cbiAgY29uc3QgcmF3V29ya2Zsb3dzID0gYXdhaXQgcmVhZEZpbGUoc3JjLCB7ZW5jb2Rpbmc6ICd1dGYtOCd9KTtcbiAgLyoqIFRoZSBvYmplY3QgcGFyc2VkIGZyb20gdGhlIHdvcmtmbG93IGNvbmZpZ3VyYXRpb24gZmlsZSwgaG9sZGluZyB0aGUgd29ya2Zsb3cgY29uZmlndXJhdGlvbnMuICovXG4gIGNvbnN0IHdvcmtmbG93cyA9IHBhcnNlKHJhd1dvcmtmbG93cykud29ya2Zsb3dzIGFzIHtba2V5OiBzdHJpbmddOiBXb3JrZmxvd307XG5cbiAgLy8gUmVtb3ZlIGFueSB3b3JrZmxvdyB3aGljaCBpcyBtYXJrZWQgYXMgZGlzYWJsZWQuXG4gIGZvciAoY29uc3QgW25hbWUsIHdvcmtmbG93XSBvZiBPYmplY3QuZW50cmllcyh3b3JrZmxvd3MpKSB7XG4gICAgaWYgKHdvcmtmbG93LmRpc2FibGVkICE9PSB0cnVlKSB7XG4gICAgICBmaWx0ZXJlZFdvcmtmbG93c1tuYW1lXSA9IHdvcmtmbG93O1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmaWx0ZXJlZFdvcmtmbG93cztcbn1cbiJdfQ==